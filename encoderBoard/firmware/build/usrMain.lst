ARM GAS  /tmp/ccsaCgR1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"usrMain.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.interruptExternal2,"ax",%progbits
  19              		.align	2
  20              		.global	interruptExternal2
  21              		.thumb
  22              		.thumb_func
  24              	interruptExternal2:
  25              	.LFB63:
  26              		.file 1 "Src/usrMain.c"
   1:Src/usrMain.c **** #include "usrMain.h"
   2:Src/usrMain.c **** 
   3:Src/usrMain.c **** #include "adc.h"
   4:Src/usrMain.c **** #include "can.h"
   5:Src/usrMain.c **** #include "globals.h"
   6:Src/usrMain.c **** 
   7:Src/usrMain.c **** #define ENC_CNT (tim2Handle->Instance->CNT)
   8:Src/usrMain.c **** 
   9:Src/usrMain.c **** static uint32_t sendPeriodMs = 1;
  10:Src/usrMain.c **** volatile uint16_t indexPulsePosition = 0xffff;
  11:Src/usrMain.c **** 
  12:Src/usrMain.c **** void interruptExternal2()
  13:Src/usrMain.c **** {
  27              		.loc 1 13 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  14:Src/usrMain.c **** 	indexPulsePosition = ENC_CNT;
  32              		.loc 1 14 0
  33 0000 034B     		ldr	r3, .L2
  34 0002 1B68     		ldr	r3, [r3]
  35 0004 1B68     		ldr	r3, [r3]
  36 0006 5B6A     		ldr	r3, [r3, #36]
  37 0008 9BB2     		uxth	r3, r3
  38 000a 024A     		ldr	r2, .L2+4
  39 000c 1380     		strh	r3, [r2]	@ movhi
  40 000e 7047     		bx	lr
  41              	.L3:
  42              		.align	2
  43              	.L2:
  44 0010 00000000 		.word	tim2Handle
ARM GAS  /tmp/ccsaCgR1.s 			page 2


  45 0014 00000000 		.word	.LANCHOR0
  46              		.cfi_endproc
  47              	.LFE63:
  49              		.section	.text.usrMain,"ax",%progbits
  50              		.align	2
  51              		.global	usrMain
  52              		.thumb
  53              		.thumb_func
  55              	usrMain:
  56              	.LFB64:
  15:Src/usrMain.c **** }
  16:Src/usrMain.c **** 
  17:Src/usrMain.c **** int usrMain()
  18:Src/usrMain.c **** {
  57              		.loc 1 18 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 24
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61 0000 30B5     		push	{r4, r5, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 12
  64              		.cfi_offset 4, -12
  65              		.cfi_offset 5, -8
  66              		.cfi_offset 14, -4
  67 0002 87B0     		sub	sp, sp, #28
  68              	.LCFI1:
  69              		.cfi_def_cfa_offset 40
  70              	.LVL0:
  71              	.LBB2:
  19:Src/usrMain.c **** 	for (int i = 1; i <= 3; ++i)
  72              		.loc 1 19 0
  73 0004 0124     		movs	r4, #1
  74 0006 04E0     		b	.L5
  75              	.LVL1:
  76              	.L6:
  20:Src/usrMain.c **** 		led(i, 0);
  77              		.loc 1 20 0 discriminator 3
  78 0008 E0B2     		uxtb	r0, r4
  79 000a 0021     		movs	r1, #0
  80 000c FFF7FEFF 		bl	led
  81              	.LVL2:
  19:Src/usrMain.c **** 	for (int i = 1; i <= 3; ++i)
  82              		.loc 1 19 0 discriminator 3
  83 0010 0134     		adds	r4, r4, #1
  84              	.LVL3:
  85              	.L5:
  19:Src/usrMain.c **** 	for (int i = 1; i <= 3; ++i)
  86              		.loc 1 19 0 is_stmt 0 discriminator 1
  87 0012 032C     		cmp	r4, #3
  88 0014 F8DD     		ble	.L6
  89              	.LBE2:
  21:Src/usrMain.c **** 	HAL_Delay(500);
  90              		.loc 1 21 0 is_stmt 1
  91 0016 4FF4FA70 		mov	r0, #500
  92 001a FFF7FEFF 		bl	HAL_Delay
  93              	.LVL4:
  94              	.LBB3:
ARM GAS  /tmp/ccsaCgR1.s 			page 3


  22:Src/usrMain.c **** 
  23:Src/usrMain.c **** 	for (int i = 1; i <= 3; ++i) {
  95              		.loc 1 23 0
  96 001e 0124     		movs	r4, #1
  97              	.LVL5:
  98 0020 07E0     		b	.L7
  99              	.LVL6:
 100              	.L8:
  24:Src/usrMain.c **** 		led(i, 1);
 101              		.loc 1 24 0 discriminator 3
 102 0022 E0B2     		uxtb	r0, r4
 103 0024 0121     		movs	r1, #1
 104 0026 FFF7FEFF 		bl	led
 105              	.LVL7:
  25:Src/usrMain.c **** 		HAL_Delay(100);
 106              		.loc 1 25 0 discriminator 3
 107 002a 6420     		movs	r0, #100
 108 002c FFF7FEFF 		bl	HAL_Delay
 109              	.LVL8:
  23:Src/usrMain.c **** 		led(i, 1);
 110              		.loc 1 23 0 discriminator 3
 111 0030 0134     		adds	r4, r4, #1
 112              	.LVL9:
 113              	.L7:
  23:Src/usrMain.c **** 		led(i, 1);
 114              		.loc 1 23 0 is_stmt 0 discriminator 1
 115 0032 032C     		cmp	r4, #3
 116 0034 F5DD     		ble	.L8
 117 0036 0324     		movs	r4, #3
 118              	.LVL10:
 119 0038 07E0     		b	.L9
 120              	.LVL11:
 121              	.L10:
 122              	.LBE3:
 123              	.LBB4:
  26:Src/usrMain.c **** 	}
  27:Src/usrMain.c **** 	for (int i = 3; i >= 1; --i) {
  28:Src/usrMain.c **** 		led(i, 0);
 124              		.loc 1 28 0 is_stmt 1 discriminator 3
 125 003a E0B2     		uxtb	r0, r4
 126 003c 0021     		movs	r1, #0
 127 003e FFF7FEFF 		bl	led
 128              	.LVL12:
  29:Src/usrMain.c **** 		HAL_Delay(100);
 129              		.loc 1 29 0 discriminator 3
 130 0042 6420     		movs	r0, #100
 131 0044 FFF7FEFF 		bl	HAL_Delay
 132              	.LVL13:
  27:Src/usrMain.c **** 		led(i, 0);
 133              		.loc 1 27 0 discriminator 3
 134 0048 013C     		subs	r4, r4, #1
 135              	.LVL14:
 136              	.L9:
  27:Src/usrMain.c **** 		led(i, 0);
 137              		.loc 1 27 0 is_stmt 0 discriminator 1
 138 004a 002C     		cmp	r4, #0
 139 004c F5DC     		bgt	.L10
ARM GAS  /tmp/ccsaCgR1.s 			page 4


 140              	.LBE4:
  30:Src/usrMain.c **** 	}
  31:Src/usrMain.c **** 
  32:Src/usrMain.c **** 	canInit(CANMODE_RAW, CANMODE_OFF);
 141              		.loc 1 32 0 is_stmt 1
 142 004e 0120     		movs	r0, #1
 143 0050 0021     		movs	r1, #0
 144 0052 FFF7FEFF 		bl	canInit
 145              	.LVL15:
  33:Src/usrMain.c **** 	HAL_TIM_Encoder_Start(tim2Handle, TIM_CHANNEL_ALL);
 146              		.loc 1 33 0
 147 0056 364B     		ldr	r3, .L21
 148 0058 1868     		ldr	r0, [r3]
 149 005a 1821     		movs	r1, #24
 150 005c FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 151              	.LVL16:
  34:Src/usrMain.c **** 
  35:Src/usrMain.c **** 	CanMessage toSend;
  36:Src/usrMain.c **** 	toSend.id = 100;
 152              		.loc 1 36 0
 153 0060 6423     		movs	r3, #100
 154 0062 ADF80C30 		strh	r3, [sp, #12]	@ movhi
  37:Src/usrMain.c **** 	toSend.dlc = 4;
 155              		.loc 1 37 0
 156 0066 0423     		movs	r3, #4
 157 0068 8DF80E30 		strb	r3, [sp, #14]
  38:Src/usrMain.c **** 	uint32_t lastSendMs = HAL_GetTick();
 158              		.loc 1 38 0
 159 006c FFF7FEFF 		bl	HAL_GetTick
 160              	.LVL17:
 161 0070 0446     		mov	r4, r0
 162              	.LVL18:
 163              	.L18:
 164              	.LBB5:
  39:Src/usrMain.c **** 	while (1) {
  40:Src/usrMain.c **** 		if (canCheckInbox(can1Handle)) {
 165              		.loc 1 40 0
 166 0072 304B     		ldr	r3, .L21+4
 167 0074 1868     		ldr	r0, [r3]
 168 0076 FFF7FEFF 		bl	canCheckInbox
 169              	.LVL19:
 170 007a F0B1     		cbz	r0, .L11
 171              	.LBB6:
  41:Src/usrMain.c **** 			CanMessage received;
  42:Src/usrMain.c **** 			canGetNew(can1Handle, &received);
 172              		.loc 1 42 0
 173 007c 2D4B     		ldr	r3, .L21+4
 174 007e 1868     		ldr	r0, [r3]
 175 0080 6946     		mov	r1, sp
 176 0082 FFF7FEFF 		bl	canGetNew
 177              	.LVL20:
  43:Src/usrMain.c **** 			uint16_t new_ENC_CNT = *((uint16_t*)received.data);
 178              		.loc 1 43 0
 179 0086 BDF80320 		ldrh	r2, [sp, #3]	@ unaligned
 180              	.LVL21:
  44:Src/usrMain.c **** 			int newIndexPulsePosition = 
  45:Src/usrMain.c **** 				indexPulsePosition + new_ENC_CNT - ENC_CNT;
ARM GAS  /tmp/ccsaCgR1.s 			page 5


 181              		.loc 1 45 0
 182 008a 2B4B     		ldr	r3, .L21+8
 183 008c 1B88     		ldrh	r3, [r3]
 184 008e 9BB2     		uxth	r3, r3
 185 0090 1344     		add	r3, r3, r2
 186 0092 2749     		ldr	r1, .L21
 187 0094 0968     		ldr	r1, [r1]
 188 0096 0868     		ldr	r0, [r1]
 189 0098 406A     		ldr	r0, [r0, #36]
 190 009a 1B1A     		subs	r3, r3, r0
 191              	.LVL22:
  46:Src/usrMain.c **** 			if (newIndexPulsePosition > 0 && newIndexPulsePosition <= 39999)
 192              		.loc 1 46 0
 193 009c 5D1E     		subs	r5, r3, #1
 194 009e 49F63E40 		movw	r0, #39998
 195 00a2 8542     		cmp	r5, r0
 196 00a4 03D8     		bhi	.L12
  47:Src/usrMain.c **** 				indexPulsePosition = newIndexPulsePosition;
 197              		.loc 1 47 0
 198 00a6 9BB2     		uxth	r3, r3
 199              	.LVL23:
 200 00a8 2348     		ldr	r0, .L21+8
 201 00aa 0380     		strh	r3, [r0]	@ movhi
 202 00ac 03E0     		b	.L13
 203              	.LVL24:
 204              	.L12:
  48:Src/usrMain.c **** 			else
  49:Src/usrMain.c **** 				indexPulsePosition = 0xffff;
 205              		.loc 1 49 0
 206 00ae 4FF6FF70 		movw	r0, #65535
 207 00b2 214B     		ldr	r3, .L21+8
 208              	.LVL25:
 209 00b4 1880     		strh	r0, [r3]	@ movhi
 210              	.L13:
  50:Src/usrMain.c **** 			ENC_CNT = *((uint16_t*)received.data);
 211              		.loc 1 50 0
 212 00b6 0B68     		ldr	r3, [r1]
 213 00b8 5A62     		str	r2, [r3, #36]
 214              	.LVL26:
 215              	.L11:
 216              	.LBE6:
  51:Src/usrMain.c **** 		}
  52:Src/usrMain.c **** 
  53:Src/usrMain.c **** 		if (ENC_CNT / 200 % 2)
 217              		.loc 1 53 0
 218 00ba 1D4B     		ldr	r3, .L21
 219 00bc 1B68     		ldr	r3, [r3]
 220 00be 1B68     		ldr	r3, [r3]
 221 00c0 5B6A     		ldr	r3, [r3, #36]
 222 00c2 1E4A     		ldr	r2, .L21+12
 223 00c4 A2FB0323 		umull	r2, r3, r2, r3
 224 00c8 13F0400F 		tst	r3, #64
 225 00cc 04D0     		beq	.L14
  54:Src/usrMain.c **** 			led(1,1);
 226              		.loc 1 54 0
 227 00ce 0120     		movs	r0, #1
 228 00d0 0146     		mov	r1, r0
ARM GAS  /tmp/ccsaCgR1.s 			page 6


 229 00d2 FFF7FEFF 		bl	led
 230              	.LVL27:
 231 00d6 03E0     		b	.L15
 232              	.L14:
  55:Src/usrMain.c **** 		else
  56:Src/usrMain.c **** 			led(1,0);
 233              		.loc 1 56 0
 234 00d8 0120     		movs	r0, #1
 235 00da 0021     		movs	r1, #0
 236 00dc FFF7FEFF 		bl	led
 237              	.LVL28:
 238              	.L15:
  57:Src/usrMain.c **** 
  58:Src/usrMain.c **** 		if (indexPulsePosition != 0xffff)
 239              		.loc 1 58 0
 240 00e0 154B     		ldr	r3, .L21+8
 241 00e2 1B88     		ldrh	r3, [r3]
 242 00e4 9BB2     		uxth	r3, r3
 243 00e6 4FF6FF72 		movw	r2, #65535
 244 00ea 9342     		cmp	r3, r2
 245 00ec 04D0     		beq	.L16
  59:Src/usrMain.c **** 			led(2,1);
 246              		.loc 1 59 0
 247 00ee 0220     		movs	r0, #2
 248 00f0 0121     		movs	r1, #1
 249 00f2 FFF7FEFF 		bl	led
 250              	.LVL29:
 251 00f6 03E0     		b	.L17
 252              	.L16:
  60:Src/usrMain.c **** 		else
  61:Src/usrMain.c **** 			led(2,0);
 253              		.loc 1 61 0
 254 00f8 0220     		movs	r0, #2
 255 00fa 0021     		movs	r1, #0
 256 00fc FFF7FEFF 		bl	led
 257              	.LVL30:
 258              	.L17:
  62:Src/usrMain.c **** 
  63:Src/usrMain.c **** 		uint32_t nowMs = HAL_GetTick();
 259              		.loc 1 63 0
 260 0100 FFF7FEFF 		bl	HAL_GetTick
 261              	.LVL31:
 262 0104 0546     		mov	r5, r0
 263              	.LVL32:
  64:Src/usrMain.c **** 		if (nowMs - lastSendMs > sendPeriodMs) {
 264              		.loc 1 64 0
 265 0106 031B     		subs	r3, r0, r4
 266 0108 012B     		cmp	r3, #1
 267 010a B2D9     		bls	.L18
 268              	.LVL33:
  65:Src/usrMain.c **** 			lastSendMs = nowMs;
  66:Src/usrMain.c **** 			*((uint16_t*)toSend.data) = ENC_CNT;
 269              		.loc 1 66 0
 270 010c 084B     		ldr	r3, .L21
 271 010e 1B68     		ldr	r3, [r3]
 272 0110 1B68     		ldr	r3, [r3]
 273 0112 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccsaCgR1.s 			page 7


 274 0114 ADF80F30 		strh	r3, [sp, #15]	@ unaligned
  67:Src/usrMain.c **** 			*((uint16_t*)toSend.data + 1) = indexPulsePosition;
 275              		.loc 1 67 0
 276 0118 074B     		ldr	r3, .L21+8
 277 011a 1B88     		ldrh	r3, [r3]
 278 011c ADF81130 		strh	r3, [sp, #17]	@ unaligned
  68:Src/usrMain.c **** 			canSendMessage(can1Handle, &toSend);
 279              		.loc 1 68 0
 280 0120 044B     		ldr	r3, .L21+4
 281 0122 1868     		ldr	r0, [r3]
 282              	.LVL34:
 283 0124 03A9     		add	r1, sp, #12
 284 0126 FFF7FEFF 		bl	canSendMessage
 285              	.LVL35:
  65:Src/usrMain.c **** 			lastSendMs = nowMs;
 286              		.loc 1 65 0
 287 012a 2C46     		mov	r4, r5
 288 012c A1E7     		b	.L18
 289              	.L22:
 290 012e 00BF     		.align	2
 291              	.L21:
 292 0130 00000000 		.word	tim2Handle
 293 0134 00000000 		.word	can1Handle
 294 0138 00000000 		.word	.LANCHOR0
 295 013c 1F85EB51 		.word	1374389535
 296              	.LBE5:
 297              		.cfi_endproc
 298              	.LFE64:
 300              		.global	indexPulsePosition
 301              		.section	.data.indexPulsePosition,"aw",%progbits
 302              		.align	1
 303              		.set	.LANCHOR0,. + 0
 306              	indexPulsePosition:
 307 0000 FFFF     		.short	-1
 308              		.text
 309              	.Letext0:
 310              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 311              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 312              		.file 4 "../../shared/firmware/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 313              		.file 5 "../../shared/firmware/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 314              		.file 6 "../../shared/firmware/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 315              		.file 7 "../../shared/firmware/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 316              		.file 8 "../../shared/firmware/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 317              		.file 9 "../../shared/firmware/Inc/can.h"
 318              		.file 10 "../../shared/firmware/Drivers/CMSIS/Include/core_cm3.h"
 319              		.file 11 "Inc/handles.h"
 320              		.file 12 "../../shared/firmware/Inc/globals.h"
 321              		.file 13 "../../shared/firmware/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccsaCgR1.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usrMain.c
     /tmp/ccsaCgR1.s:19     .text.interruptExternal2:0000000000000000 $t
     /tmp/ccsaCgR1.s:24     .text.interruptExternal2:0000000000000000 interruptExternal2
     /tmp/ccsaCgR1.s:44     .text.interruptExternal2:0000000000000010 $d
     /tmp/ccsaCgR1.s:50     .text.usrMain:0000000000000000 $t
     /tmp/ccsaCgR1.s:55     .text.usrMain:0000000000000000 usrMain
     /tmp/ccsaCgR1.s:292    .text.usrMain:0000000000000130 $d
     /tmp/ccsaCgR1.s:306    .data.indexPulsePosition:0000000000000000 indexPulsePosition
     /tmp/ccsaCgR1.s:302    .data.indexPulsePosition:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
tim2Handle
led
HAL_Delay
canInit
HAL_TIM_Encoder_Start
HAL_GetTick
canCheckInbox
canGetNew
canSendMessage
can1Handle
