ARM GAS  /tmp/ccwnAXFK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal_can.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
  19              		.align	2
  20              		.global	HAL_CAN_ConfigFilter
  21              		.thumb
  22              		.thumb_func
  24              	HAL_CAN_ConfigFilter:
  25              	.LFB64:
  26              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @file    stm32f1xx_hal_can.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @version V1.1.1
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @date    12-May-2017
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief   CAN HAL module driver.
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:           
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Initialization and de-initialization functions 
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + IO operation functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Peripheral Control functions
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   @verbatim
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                         ##### How to use this driver #####
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]            
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Enable the CAN controller interface clock using 
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           __HAL_RCC_CAN1_CLK_ENABLE() for CAN1 and __HAL_RCC_CAN2_CLK_ENABLE() for CAN2
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       -@- In case you are using CAN2 only, you have to enable the CAN1 clock.
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) CAN pins configuration
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (++) Enable the clock for the CAN GPIOs using the following function:
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              __HAL_RCC_GPIOx_CLK_ENABLE();   
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (++) Connect and configure the involved CAN pins using the 
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****               following function HAL_GPIO_Init(); 
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****               
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Initialize and configure the CAN using HAL_CAN_Init() function.   
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Transmit the desired CAN frame using HAL_CAN_Transmit() function.
ARM GAS  /tmp/ccwnAXFK.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Or transmit the desired CAN frame using HAL_CAN_Transmit_IT() function.
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Receive a CAN frame using HAL_CAN_Receive() function.
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Or receive a CAN frame using HAL_CAN_Receive_IT() function.
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      *** Polling mode IO operation ***
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      =================================
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      [..]    
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Start the CAN peripheral transmission and wait the end of this operation 
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            using HAL_CAN_Transmit(), at this stage user can specify the value of timeout
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            according to his end application
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Start the CAN peripheral reception and wait the end of this operation 
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            using HAL_CAN_Receive(), at this stage user can specify the value of timeout
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            according to his end application 
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      *** Interrupt mode IO operation ***    
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ===================================
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      [..]    
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Start the CAN peripheral transmission using HAL_CAN_Transmit_IT()
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Start the CAN peripheral reception using HAL_CAN_Receive_IT()         
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Use HAL_CAN_IRQHandler() called under the used CAN Interrupt subroutine
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) At CAN end of transmission HAL_CAN_TxCpltCallback() function is executed and user can 
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             add his own code by customization of function pointer HAL_CAN_TxCpltCallback 
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) In case of CAN Error, HAL_CAN_ErrorCallback() function is executed and user can 
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             add his own code by customization of function pointer HAL_CAN_ErrorCallback
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      *** CAN HAL driver macros list ***
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ============================================= 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      [..]
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        Below the list of most used macros in CAN HAL driver.
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_ENABLE_IT: Enable the specified CAN interrupts
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_DISABLE_IT: Disable the specified CAN interrupts
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_GET_IT_SOURCE: Check if the specified CAN interrupt source is enabled or disabl
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_CLEAR_FLAG: Clear the CAN's pending flags
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_GET_FLAG: Get the selected CAN's flag status
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      [..] 
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (@) You can refer to the CAN HAL driver header file for more useful macros 
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   @endverbatim
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @attention
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * Redistribution and use in source and binary forms, with or without modification,
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * are permitted provided that the following conditions are met:
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      this list of conditions and the following disclaimer.
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      this list of conditions and the following disclaimer in the documentation
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      and/or other materials provided with the distribution.
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
ARM GAS  /tmp/ccwnAXFK.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      may be used to endorse or promote products derived from this software
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      without specific prior written permission.
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #include "stm32f1xx_hal.h"
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @addtogroup STM32F1xx_HAL_Driver
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN CAN
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief CAN driver modules
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED  
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || \
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     defined(STM32F103xG) || defined(STM32F105xC) || defined(STM32F107xC)
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #define CAN_TIMEOUT_VALUE  10U
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Private_Functions CAN Private Functions
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** static HAL_StatusTypeDef CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber);
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** static HAL_StatusTypeDef CAN_Transmit_IT(CAN_HandleTypeDef* hcan);
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
ARM GAS  /tmp/ccwnAXFK.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions 
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief    Initialization and Configuration functions 
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim    
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Initialize and configure the CAN. 
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) De-initialize the CAN. 
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef* hcan)
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp_mcr = 0U;
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan == NULL)
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      return HAL_ERROR;
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TTCM));
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ABOM));
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AWUM));
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.NART));
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.RFLM));
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TXFP));
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SJW));
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.BS1));
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.BS2));
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan->State == HAL_CAN_STATE_RESET)
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Allocate lock resource and initialize it */
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Lock = HAL_UNLOCKED;
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Init the low level hardware */
ARM GAS  /tmp/ccwnAXFK.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Initialize the CAN state*/
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Exit from sleep mode */
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Request initialisation */
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get timeout */
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();   
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Wait the acknowledge */
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while(HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_INAK))
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State= HAL_CAN_STATE_TIMEOUT;
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_UNLOCK(hcan);
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check acknowledge */
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((hcan->Instance->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the time triggered communication mode */
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.TTCM == ENABLE)
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_TTCM);
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_TTCM);
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the automatic bus-off management */
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.ABOM == ENABLE)
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_ABOM);
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_ABOM);
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the automatic wake-up mode */
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.AWUM == ENABLE)
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_AWUM);
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
ARM GAS  /tmp/ccwnAXFK.s 			page 6


 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_AWUM);
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the no automatic retransmission */
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.NART == ENABLE)
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_NART);
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_NART);
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the receive FIFO locked mode */
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.RFLM == ENABLE)
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_RFLM);
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_RFLM);
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the transmit FIFO priority */
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.TXFP == ENABLE)
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_TXFP);
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_TXFP);
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update register MCR */
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     MODIFY_REG(hcan->Instance->MCR,
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_TTCM |
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_ABOM |
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_AWUM |
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_NART |
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_RFLM |
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_TXFP,
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                tmp_mcr);
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the bit timing register */
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.SJW            |
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.BS1            |
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.BS2            |
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               (hcan->Init.Prescaler - 1U)));
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request leave initialisation */
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get timeout */
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tickstart = HAL_GetTick();   
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Wait the acknowledge */
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     while(HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
ARM GAS  /tmp/ccwnAXFK.s 			page 7


 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State= HAL_CAN_STATE_TIMEOUT;
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Process unlocked */
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         __HAL_UNLOCK(hcan);
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_TIMEOUT;
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check acknowledged */
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_INAK))
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       status = CAN_INITSTATUS_SUCCESS;
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(status == CAN_INITSTATUS_SUCCESS)
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to none */
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Initialize the CAN state */
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Initialize the CAN state */
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR;
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  sFilterConfig: pointer to a CAN_FilterConfTypeDef structure that
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         contains the filter configuration information.
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef* hcan, CAN_FilterConfTypeDef* sFilterConfi
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
  27              		.loc 1 367 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              	.LCFI0:
ARM GAS  /tmp/ccwnAXFK.s 			page 8


  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 4, -24
  36              		.cfi_offset 5, -20
  37              		.cfi_offset 6, -16
  38              		.cfi_offset 7, -12
  39              		.cfi_offset 8, -8
  40              		.cfi_offset 14, -4
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t filternbrbitpos = 0U;
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(sFilterConfig->FilterNumber));
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(sFilterConfig->FilterActivation));
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BANKNUMBER(sFilterConfig->BankNumber));
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   filternbrbitpos = (1U) << sFilterConfig->FilterNumber;
  41              		.loc 1 381 0
  42 0004 4D69     		ldr	r5, [r1, #20]
  43 0006 0124     		movs	r4, #1
  44 0008 AC40     		lsls	r4, r4, r5
  45              	.LVL1:
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Initialisation mode for the filter */
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Select the start slave bank */
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   MODIFY_REG(hcan->Instance->FMR                         ,
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_FMR_CAN2SB                              ,
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_FMR_FINIT                              |
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              (uint32_t)(sFilterConfig->BankNumber << 8U)   );
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter Deactivation */
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->FA1R, filternbrbitpos);
  46              		.loc 1 391 0
  47 000a E643     		mvns	r6, r4
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_FMR_CAN2SB                              ,
  48              		.loc 1 385 0
  49 000c 0368     		ldr	r3, [r0]
  50 000e 486A     		ldr	r0, [r1, #36]
  51              	.LVL2:
  52 0010 D3F80022 		ldr	r2, [r3, #512]
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter Scale */
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
  53              		.loc 1 394 0
  54 0014 CF69     		ldr	r7, [r1, #28]
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_FMR_CAN2SB                              ,
  55              		.loc 1 385 0
  56 0016 22F47C52 		bic	r2, r2, #16128
  57 001a 42EA0022 		orr	r2, r2, r0, lsl #8
  58 001e 42F00102 		orr	r2, r2, #1
  59 0022 C3F80022 		str	r2, [r3, #512]
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  60              		.loc 1 391 0
ARM GAS  /tmp/ccwnAXFK.s 			page 9


  61 0026 D3F81C22 		ldr	r2, [r3, #540]
  62 002a 3240     		ands	r2, r2, r6
  63 002c C3F81C22 		str	r2, [r3, #540]
  64              		.loc 1 394 0
  65 0030 002F     		cmp	r7, #0
  66 0032 3FD1     		bne	.L2
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 16-bit scale for the filter */
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FS1R, filternbrbitpos);
  67              		.loc 1 397 0
  68 0034 D3F80C02 		ldr	r0, [r3, #524]
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR1 = 
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
  69              		.loc 1 403 0
  70 0038 B1F804E0 		ldrh	lr, [r1, #4]
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR2 = 
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
  71              		.loc 1 409 0
  72 003c 0A88     		ldrh	r2, [r1]
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
  73              		.loc 1 408 0
  74 003e 8F68     		ldr	r7, [r1, #8]
  75 0040 03EBC508 		add	r8, r3, r5, lsl #3
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  76              		.loc 1 397 0
  77 0044 06EA0005 		and	r5, r6, r0
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
  78              		.loc 1 402 0
  79 0048 C868     		ldr	r0, [r1, #12]
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
  80              		.loc 1 408 0
  81 004a 42EA0742 		orr	r2, r2, r7, lsl #16
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
  82              		.loc 1 402 0
  83 004e 4EEA0040 		orr	r0, lr, r0, lsl #16
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  84              		.loc 1 397 0
  85 0052 C3F80C52 		str	r5, [r3, #524]
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
  86              		.loc 1 401 0
  87 0056 C8F84002 		str	r0, [r8, #576]
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
  88              		.loc 1 407 0
  89 005a C8F84422 		str	r2, [r8, #580]
  90              	.L3:
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccwnAXFK.s 			page 10


 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit scale for the filter */
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->FS1R, filternbrbitpos);
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR1 = 
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR2 = 
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter Mode */
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
  91              		.loc 1 427 0
  92 005e 8A69     		ldr	r2, [r1, #24]
  93 0060 12BB     		cbnz	r2, .L4
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*Id/Mask mode for the filter*/
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FM1R, filternbrbitpos);
  94              		.loc 1 430 0
  95 0062 D3F80422 		ldr	r2, [r3, #516]
  96 0066 3240     		ands	r2, r2, r6
  97 0068 C3F80422 		str	r2, [r3, #516]
  98              	.L5:
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*Identifier list mode for the filter*/
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->FM1R, filternbrbitpos);
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter FIFO assignment */
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
  99              		.loc 1 439 0
 100 006c 0A69     		ldr	r2, [r1, #16]
 101 006e AAB9     		cbnz	r2, .L6
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* FIFO 0 assignation for the filter */
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FFA1R, filternbrbitpos);
 102              		.loc 1 442 0
 103 0070 D3F81422 		ldr	r2, [r3, #532]
 104 0074 1640     		ands	r6, r6, r2
 105 0076 C3F81462 		str	r6, [r3, #532]
 106              	.L7:
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* FIFO 1 assignation for the filter */
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->FFA1R, filternbrbitpos);
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter activation */
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterActivation == ENABLE)
 107              		.loc 1 451 0
 108 007a 0A6A     		ldr	r2, [r1, #32]
 109 007c 012A     		cmp	r2, #1
ARM GAS  /tmp/ccwnAXFK.s 			page 11


 110 007e 04D1     		bne	.L8
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->FA1R, filternbrbitpos);
 111              		.loc 1 453 0
 112 0080 D3F81C22 		ldr	r2, [r3, #540]
 113 0084 1443     		orrs	r4, r4, r2
 114              	.LVL3:
 115 0086 C3F81C42 		str	r4, [r3, #540]
 116              	.L8:
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Leave the initialisation mode for the filter */
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->FMR, ((uint32_t)CAN_FMR_FINIT));
 117              		.loc 1 457 0
 118 008a D3F80022 		ldr	r2, [r3, #512]
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 119              		.loc 1 461 0
 120 008e 0020     		movs	r0, #0
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 121              		.loc 1 457 0
 122 0090 22F00102 		bic	r2, r2, #1
 123 0094 C3F80022 		str	r2, [r3, #512]
 124              		.loc 1 461 0
 125 0098 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 126              	.LVL4:
 127              	.L6:
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 128              		.loc 1 447 0
 129 009c D3F81422 		ldr	r2, [r3, #532]
 130 00a0 2243     		orrs	r2, r2, r4
 131 00a2 C3F81422 		str	r2, [r3, #532]
 132 00a6 E8E7     		b	.L7
 133              	.L4:
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 134              		.loc 1 435 0
 135 00a8 D3F80422 		ldr	r2, [r3, #516]
 136 00ac 2243     		orrs	r2, r2, r4
 137 00ae C3F80422 		str	r2, [r3, #516]
 138 00b2 DBE7     		b	.L5
 139              	.L2:
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 140              		.loc 1 412 0
 141 00b4 012F     		cmp	r7, #1
 142 00b6 D2D1     		bne	.L3
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 143              		.loc 1 415 0
 144 00b8 D3F80C22 		ldr	r2, [r3, #524]
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 145              		.loc 1 419 0
 146 00bc B1F804E0 		ldrh	lr, [r1, #4]
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 147              		.loc 1 418 0
 148 00c0 0868     		ldr	r0, [r1]
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
ARM GAS  /tmp/ccwnAXFK.s 			page 12


 149              		.loc 1 423 0
 150 00c2 8F89     		ldrh	r7, [r1, #12]
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 151              		.loc 1 415 0
 152 00c4 44EA020C 		orr	ip, r4, r2
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 153              		.loc 1 422 0
 154 00c8 8A68     		ldr	r2, [r1, #8]
 155 00ca 03EBC505 		add	r5, r3, r5, lsl #3
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 156              		.loc 1 418 0
 157 00ce 4EEA0040 		orr	r0, lr, r0, lsl #16
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 158              		.loc 1 422 0
 159 00d2 47EA0242 		orr	r2, r7, r2, lsl #16
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 160              		.loc 1 415 0
 161 00d6 C3F80CC2 		str	ip, [r3, #524]
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 162              		.loc 1 417 0
 163 00da C5F84002 		str	r0, [r5, #576]
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 164              		.loc 1 421 0
 165 00de C5F84422 		str	r2, [r5, #580]
 166 00e2 BCE7     		b	.L3
 167              		.cfi_endproc
 168              	.LFE64:
 170              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 171              		.align	2
 172              		.weak	HAL_CAN_MspInit
 173              		.thumb
 174              		.thumb_func
 176              	HAL_CAN_MspInit:
 177              	.LFB66:
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Deinitializes the CANx peripheral registers to their default reset values. 
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef* hcan)
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan == NULL)
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      return HAL_ERROR;
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* DeInit the low level hardware */
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
ARM GAS  /tmp/ccwnAXFK.s 			page 13


 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release Lock */
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 178              		.loc 1 503 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              	.LVL5:
 184 0000 7047     		bx	lr
 185              		.cfi_endproc
 186              	.LFE66:
 188 0002 00BF     		.section	.text.HAL_CAN_Init,"ax",%progbits
 189              		.align	2
 190              		.global	HAL_CAN_Init
 191              		.thumb
 192              		.thumb_func
 194              	HAL_CAN_Init:
 195              	.LFB63:
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 196              		.loc 1 174 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              	.LVL6:
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 201              		.loc 1 180 0
 202 0000 0028     		cmp	r0, #0
 203 0002 00F09180 		beq	.L32
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 204              		.loc 1 174 0
 205 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 206              	.LCFI1:
 207              		.cfi_def_cfa_offset 24
 208              		.cfi_offset 3, -24
 209              		.cfi_offset 4, -20
 210              		.cfi_offset 5, -16
 211              		.cfi_offset 6, -12
 212              		.cfi_offset 7, -8
 213              		.cfi_offset 14, -4
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccwnAXFK.s 			page 14


 214              		.loc 1 199 0
 215 0008 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 216 000c 0546     		mov	r5, r0
 217 000e 03F0FF02 		and	r2, r3, #255
 218 0012 002B     		cmp	r3, #0
 219 0014 7CD0     		beq	.L41
 220              	.LVL7:
 221              	.L14:
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 222              		.loc 1 211 0
 223 0016 2B68     		ldr	r3, [r5]
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 224              		.loc 1 208 0
 225 0018 0222     		movs	r2, #2
 226 001a 85F83C20 		strb	r2, [r5, #60]
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 227              		.loc 1 211 0
 228 001e 1A68     		ldr	r2, [r3]
 229 0020 22F00202 		bic	r2, r2, #2
 230 0024 1A60     		str	r2, [r3]
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 231              		.loc 1 214 0
 232 0026 1A68     		ldr	r2, [r3]
 233 0028 42F00102 		orr	r2, r2, #1
 234 002c 1A60     		str	r2, [r3]
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 235              		.loc 1 217 0
 236 002e FFF7FEFF 		bl	HAL_GetTick
 237              	.LVL8:
 238 0032 0646     		mov	r6, r0
 239              	.LVL9:
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 240              		.loc 1 220 0
 241 0034 04E0     		b	.L15
 242              	.LVL10:
 243              	.L16:
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 244              		.loc 1 222 0
 245 0036 FFF7FEFF 		bl	HAL_GetTick
 246              	.LVL11:
 247 003a 801B     		subs	r0, r0, r6
 248 003c 0A28     		cmp	r0, #10
 249 003e 5CD8     		bhi	.L42
 250              	.L15:
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 251              		.loc 1 220 0
 252 0040 2A68     		ldr	r2, [r5]
 253 0042 5368     		ldr	r3, [r2, #4]
 254 0044 13F00104 		ands	r4, r3, #1
 255 0048 F5D0     		beq	.L16
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 256              		.loc 1 232 0
 257 004a 5368     		ldr	r3, [r2, #4]
 258 004c D907     		lsls	r1, r3, #31
 259 004e 5AD5     		bpl	.L17
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 260              		.loc 1 235 0
ARM GAS  /tmp/ccwnAXFK.s 			page 15


 261 0050 AB69     		ldr	r3, [r5, #24]
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 262              		.loc 1 245 0
 263 0052 E969     		ldr	r1, [r5, #28]
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 264              		.loc 1 241 0
 265 0054 012B     		cmp	r3, #1
 266 0056 0CBF     		ite	eq
 267 0058 8023     		moveq	r3, #128
 268 005a 0023     		movne	r3, #0
 269              	.LVL12:
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 270              		.loc 1 245 0
 271 005c 0129     		cmp	r1, #1
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 272              		.loc 1 255 0
 273 005e 296A     		ldr	r1, [r5, #32]
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 274              		.loc 1 247 0
 275 0060 0CBF     		ite	eq
 276 0062 43F04003 		orreq	r3, r3, #64
 277              	.LVL13:
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 278              		.loc 1 251 0
 279 0066 23F04003 		bicne	r3, r3, #64
 280              	.LVL14:
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 281              		.loc 1 255 0
 282 006a 0129     		cmp	r1, #1
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 283              		.loc 1 264 0
 284 006c 696A     		ldr	r1, [r5, #36]
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 285              		.loc 1 257 0
 286 006e 0CBF     		ite	eq
 287 0070 43F02003 		orreq	r3, r3, #32
 288              	.LVL15:
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 289              		.loc 1 261 0
 290 0074 23F02003 		bicne	r3, r3, #32
 291              	.LVL16:
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 292              		.loc 1 264 0
 293 0078 0129     		cmp	r1, #1
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 294              		.loc 1 274 0
 295 007a A96A     		ldr	r1, [r5, #40]
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 296              		.loc 1 266 0
 297 007c 0CBF     		ite	eq
 298 007e 43F01003 		orreq	r3, r3, #16
 299              	.LVL17:
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 300              		.loc 1 270 0
 301 0082 23F01003 		bicne	r3, r3, #16
 302              	.LVL18:
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
ARM GAS  /tmp/ccwnAXFK.s 			page 16


 303              		.loc 1 274 0
 304 0086 0129     		cmp	r1, #1
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 305              		.loc 1 283 0
 306 0088 E96A     		ldr	r1, [r5, #44]
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.SJW            |
 307              		.loc 1 303 0
 308 008a EF68     		ldr	r7, [r5, #12]
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 309              		.loc 1 276 0
 310 008c 0CBF     		ite	eq
 311 008e 43F00803 		orreq	r3, r3, #8
 312              	.LVL19:
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 313              		.loc 1 280 0
 314 0092 23F00803 		bicne	r3, r3, #8
 315              	.LVL20:
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 316              		.loc 1 283 0
 317 0096 0129     		cmp	r1, #1
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.SJW            |
 318              		.loc 1 303 0
 319 0098 A968     		ldr	r1, [r5, #8]
 320 009a 2E69     		ldr	r6, [r5, #16]
 321              	.LVL21:
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_TTCM |
 322              		.loc 1 293 0
 323 009c 1068     		ldr	r0, [r2]
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.SJW            |
 324              		.loc 1 303 0
 325 009e 6C69     		ldr	r4, [r5, #20]
 326 00a0 47EA0107 		orr	r7, r7, r1
 327 00a4 6968     		ldr	r1, [r5, #4]
 328 00a6 46EA0706 		orr	r6, r6, r7
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 329              		.loc 1 285 0
 330 00aa 0CBF     		ite	eq
 331 00ac 43F00403 		orreq	r3, r3, #4
 332              	.LVL22:
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 333              		.loc 1 289 0
 334 00b0 23F00403 		bicne	r3, r3, #4
 335              	.LVL23:
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.SJW            |
 336              		.loc 1 303 0
 337 00b4 3443     		orrs	r4, r4, r6
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_TTCM |
 338              		.loc 1 293 0
 339 00b6 20F0FC00 		bic	r0, r0, #252
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.SJW            |
 340              		.loc 1 303 0
 341 00ba 0139     		subs	r1, r1, #1
 342 00bc 2143     		orrs	r1, r1, r4
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_TTCM |
 343              		.loc 1 293 0
 344 00be 0343     		orrs	r3, r3, r0
 345              	.LVL24:
ARM GAS  /tmp/ccwnAXFK.s 			page 17


 346 00c0 1360     		str	r3, [r2]
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.SJW            |
 347              		.loc 1 303 0
 348 00c2 D161     		str	r1, [r2, #28]
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 349              		.loc 1 310 0
 350 00c4 1368     		ldr	r3, [r2]
 351 00c6 23F00103 		bic	r3, r3, #1
 352 00ca 1360     		str	r3, [r2]
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    
 353              		.loc 1 313 0
 354 00cc FFF7FEFF 		bl	HAL_GetTick
 355              	.LVL25:
 356 00d0 0446     		mov	r4, r0
 357              	.LVL26:
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 358              		.loc 1 316 0
 359 00d2 04E0     		b	.L29
 360              	.LVL27:
 361              	.L30:
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 362              		.loc 1 318 0
 363 00d4 FFF7FEFF 		bl	HAL_GetTick
 364              	.LVL28:
 365 00d8 001B     		subs	r0, r0, r4
 366 00da 0A28     		cmp	r0, #10
 367 00dc 1DD8     		bhi	.L43
 368              	.L29:
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 369              		.loc 1 316 0
 370 00de 2B68     		ldr	r3, [r5]
 371 00e0 5A68     		ldr	r2, [r3, #4]
 372 00e2 D207     		lsls	r2, r2, #31
 373 00e4 F6D4     		bmi	.L30
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 374              		.loc 1 330 0
 375 00e6 5B68     		ldr	r3, [r3, #4]
 376 00e8 13F00103 		ands	r3, r3, #1
 377 00ec 0BD1     		bne	.L17
 378              	.LVL29:
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 379              		.loc 1 342 0
 380 00ee 0122     		movs	r2, #1
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 381              		.loc 1 339 0
 382 00f0 2B64     		str	r3, [r5, #64]
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 383              		.loc 1 345 0
 384 00f2 1846     		mov	r0, r3
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 385              		.loc 1 342 0
 386 00f4 85F83C20 		strb	r2, [r5, #60]
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 387              		.loc 1 355 0
 388 00f8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 389              	.LVL30:
 390              	.L42:
ARM GAS  /tmp/ccwnAXFK.s 			page 18


 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
 391              		.loc 1 224 0
 392 00fa 0320     		movs	r0, #3
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
 393              		.loc 1 226 0
 394 00fc 85F83D40 		strb	r4, [r5, #61]
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
 395              		.loc 1 224 0
 396 0100 85F83C00 		strb	r0, [r5, #60]
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 397              		.loc 1 227 0
 398 0104 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 399              	.LVL31:
 400              	.L17:
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 401              		.loc 1 350 0
 402 0106 0423     		movs	r3, #4
 403 0108 85F83C30 		strb	r3, [r5, #60]
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 404              		.loc 1 353 0
 405 010c 0120     		movs	r0, #1
 406 010e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 407              	.LVL32:
 408              	.L41:
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Init the low level hardware */
 409              		.loc 1 202 0
 410 0110 80F83D20 		strb	r2, [r0, #61]
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 411              		.loc 1 204 0
 412 0114 FFF7FEFF 		bl	HAL_CAN_MspInit
 413              	.LVL33:
 414 0118 7DE7     		b	.L14
 415              	.LVL34:
 416              	.L43:
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 417              		.loc 1 320 0
 418 011a 0320     		movs	r0, #3
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 419              		.loc 1 323 0
 420 011c 0023     		movs	r3, #0
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 421              		.loc 1 320 0
 422 011e 85F83C00 		strb	r0, [r5, #60]
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 423              		.loc 1 323 0
 424 0122 85F83D30 		strb	r3, [r5, #61]
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 425              		.loc 1 325 0
 426 0126 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 427              	.LVL35:
 428              	.L32:
 429              	.LCFI2:
 430              		.cfi_def_cfa_offset 0
 431              		.cfi_restore 3
 432              		.cfi_restore 4
 433              		.cfi_restore 5
 434              		.cfi_restore 6
ARM GAS  /tmp/ccwnAXFK.s 			page 19


 435              		.cfi_restore 7
 436              		.cfi_restore 14
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 437              		.loc 1 182 0
 438 0128 0120     		movs	r0, #1
 439              	.LVL36:
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 440              		.loc 1 355 0
 441 012a 7047     		bx	lr
 442              		.cfi_endproc
 443              	.LFE63:
 445              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 446              		.align	2
 447              		.weak	HAL_CAN_MspDeInit
 448              		.thumb
 449              		.thumb_func
 451              	HAL_CAN_MspDeInit:
 452              	.LFB67:
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_MspInit can be implemented in the user file
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */ 
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 453              		.loc 1 518 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458              	.LVL37:
 459 0000 7047     		bx	lr
 460              		.cfi_endproc
 461              	.LFE67:
 463 0002 00BF     		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 464              		.align	2
 465              		.global	HAL_CAN_DeInit
 466              		.thumb
 467              		.thumb_func
 469              	HAL_CAN_DeInit:
 470              	.LFB65:
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 471              		.loc 1 470 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              	.LVL38:
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 476              		.loc 1 472 0
ARM GAS  /tmp/ccwnAXFK.s 			page 20


 477 0000 60B1     		cbz	r0, .L47
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 478              		.loc 1 470 0
 479 0002 10B5     		push	{r4, lr}
 480              	.LCFI3:
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 4, -8
 483              		.cfi_offset 14, -4
 484 0004 0446     		mov	r4, r0
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 485              		.loc 1 481 0
 486 0006 0223     		movs	r3, #2
 487 0008 80F83C30 		strb	r3, [r0, #60]
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 488              		.loc 1 484 0
 489 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
 490              	.LVL39:
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 491              		.loc 1 487 0
 492 0010 0020     		movs	r0, #0
 493 0012 84F83C00 		strb	r0, [r4, #60]
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 494              		.loc 1 490 0
 495 0016 84F83D00 		strb	r0, [r4, #61]
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 496              		.loc 1 493 0
 497 001a 10BD     		pop	{r4, pc}
 498              	.LVL40:
 499              	.L47:
 500              	.LCFI4:
 501              		.cfi_def_cfa_offset 0
 502              		.cfi_restore 4
 503              		.cfi_restore 14
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 504              		.loc 1 474 0
 505 001c 0120     		movs	r0, #1
 506              	.LVL41:
 507 001e 7047     		bx	lr
 508              		.cfi_endproc
 509              	.LFE65:
 511              		.section	.text.HAL_CAN_Transmit,"ax",%progbits
 512              		.align	2
 513              		.global	HAL_CAN_Transmit
 514              		.thumb
 515              		.thumb_func
 517              	HAL_CAN_Transmit:
 518              	.LFB68:
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_MspDeInit can be implemented in the user file
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */ 
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
ARM GAS  /tmp/ccwnAXFK.s 			page 21


 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Input and Output operation functions
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *  @brief    I/O operation functions 
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim   
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                       ##### IO operation functions #####
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Transmit a CAN frame message.
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Receive a CAN frame message.
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Enter CAN peripheral in sleep mode. 
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Wake up the CAN peripheral from sleep mode.
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  Timeout: Specify Timeout value   
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Transmit(CAN_HandleTypeDef* hcan, uint32_t Timeout)
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 519              		.loc 1 555 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              	.LVL42:
 524 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 525              	.LCFI5:
 526              		.cfi_def_cfa_offset 32
 527              		.cfi_offset 4, -32
 528              		.cfi_offset 5, -28
 529              		.cfi_offset 6, -24
 530              		.cfi_offset 7, -20
 531              		.cfi_offset 8, -16
 532              		.cfi_offset 9, -12
 533              		.cfi_offset 10, -8
 534              		.cfi_offset 14, -4
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(hcan->pTxMsg->IDE));
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RTR(hcan->pTxMsg->RTR));
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_DLC(hcan->pTxMsg->DLC));
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(((hcan->Instance->TSR&CAN_TSR_TME0) == CAN_TSR_TME0) || \
 535              		.loc 1 564 0
 536 0004 0768     		ldr	r7, [r0]
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 537              		.loc 1 555 0
 538 0006 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccwnAXFK.s 			page 22


 539              	.LCFI6:
 540              		.cfi_def_cfa_offset 40
 541              		.loc 1 564 0
 542 0008 BB68     		ldr	r3, [r7, #8]
 543 000a 5B01     		lsls	r3, r3, #5
 544 000c 03D4     		bmi	.L51
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 545              		.loc 1 565 0 discriminator 1
 546 000e BB68     		ldr	r3, [r7, #8]
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 547              		.loc 1 564 0 discriminator 1
 548 0010 1E01     		lsls	r6, r3, #4
 549 0012 40F19D80 		bpl	.L90
 550              	.L51:
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME2) == CAN_TSR_TME2))
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process locked */
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_LOCK(hcan);
 551              		.loc 1 569 0
 552 0016 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 553 001a 012B     		cmp	r3, #1
 554 001c 00F09480 		beq	.L79
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 555              		.loc 1 572 0 discriminator 2
 556 0020 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 557              		.loc 1 569 0 discriminator 2
 558 0024 0122     		movs	r2, #1
 559              		.loc 1 572 0 discriminator 2
 560 0026 DBB2     		uxtb	r3, r3
 561 0028 322B     		cmp	r3, #50
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 562              		.loc 1 569 0 discriminator 2
 563 002a 80F83D20 		strb	r2, [r0, #61]
 564              		.loc 1 572 0 discriminator 2
 565 002e 00F0D280 		beq	.L55
 566 0032 622B     		cmp	r3, #98
 567 0034 00F0D380 		beq	.L56
 568 0038 222B     		cmp	r3, #34
 569 003a 00F09480 		beq	.L91
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX;
 570              		.loc 1 584 0
 571 003e 1223     		movs	r3, #18
 572 0040 80F83C30 		strb	r3, [r0, #60]
ARM GAS  /tmp/ccwnAXFK.s 			page 23


 573              	.L58:
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Select one empty transmit mailbox */
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME0))
 574              		.loc 1 589 0
 575 0044 BB68     		ldr	r3, [r7, #8]
 576 0046 5A01     		lsls	r2, r3, #5
 577 0048 00F19480 		bmi	.L80
 578              	.L94:
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_0;
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else if (HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME1))
 579              		.loc 1 593 0
 580 004c BB68     		ldr	r3, [r7, #8]
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_1;
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_2;
 581              		.loc 1 599 0
 582 004e 13F0006F 		tst	r3, #134217728
 583 0052 14BF     		ite	ne
 584 0054 0124     		movne	r4, #1
 585 0056 0224     		moveq	r4, #2
 586              	.L59:
 587              	.LVL43:
 588 0058 4FEA041E 		lsl	lr, r4, #4
 589 005c 07EB0E02 		add	r2, r7, lr
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the Id */
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR &= CAN_TI0R_TXRQ;
 590              		.loc 1 603 0
 591 0060 D2F88051 		ldr	r5, [r2, #384]
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->pTxMsg->IDE == CAN_ID_STD)
 592              		.loc 1 604 0
 593 0064 036B     		ldr	r3, [r0, #48]
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->pTxMsg->IDE == CAN_ID_STD)
 594              		.loc 1 603 0
 595 0066 05F00105 		and	r5, r5, #1
 596 006a C2F88051 		str	r5, [r2, #384]
 597              		.loc 1 604 0
 598 006e 9E68     		ldr	r6, [r3, #8]
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       assert_param(IS_CAN_STDID(hcan->pTxMsg->StdId));  
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->StdId << CAN_TI0R_STID_Pos
 599              		.loc 1 607 0
 600 0070 D2F88051 		ldr	r5, [r2, #384]
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 601              		.loc 1 604 0
 602 0074 002E     		cmp	r6, #0
 603 0076 40F0A380 		bne	.L60
 604              		.loc 1 607 0
ARM GAS  /tmp/ccwnAXFK.s 			page 24


 605 007a 1E68     		ldr	r6, [r3]
 606 007c 0196     		str	r6, [sp, #4]
 607 007e DE68     		ldr	r6, [r3, #12]
 608 0080 3543     		orrs	r5, r5, r6
 609 0082 019E     		ldr	r6, [sp, #4]
 610 0084 45EA4656 		orr	r6, r5, r6, lsl #21
 611 0088 C2F88061 		str	r6, [r2, #384]
 612              	.L61:
 613 008c 0D46     		mov	r5, r1
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       assert_param(IS_CAN_EXTID(hcan->pTxMsg->ExtId));
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->ExtId << CAN_TI0R_EXID_Pos
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the DLC */
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->pTxMsg->DLC &= (uint8_t)0x0000000F;
 614              		.loc 1 619 0
 615 008e 1969     		ldr	r1, [r3, #16]
 616              	.LVL44:
 617 0090 0646     		mov	r6, r0
 618 0092 01F00F01 		and	r1, r1, #15
 619 0096 1961     		str	r1, [r3, #16]
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 620              		.loc 1 620 0
 621 0098 D2F88401 		ldr	r0, [r2, #388]
 622              	.LVL45:
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR |= hcan->pTxMsg->DLC;
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the data field */
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR, ((uint32_t)hcan->pTxMsg->Data[3] <<
 623              		.loc 1 624 0
 624 009c 7744     		add	r7, r7, lr
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 625              		.loc 1 620 0
 626 009e 20F00F00 		bic	r0, r0, #15
 627 00a2 C2F88401 		str	r0, [r2, #388]
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR |= hcan->pTxMsg->DLC;
 628              		.loc 1 621 0
 629 00a6 D2F88401 		ldr	r0, [r2, #388]
 630              		.loc 1 624 0
 631 00aa 07F5C47E 		add	lr, r7, #392
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR |= hcan->pTxMsg->DLC;
 632              		.loc 1 621 0
 633 00ae 0143     		orrs	r1, r1, r0
 634 00b0 C2F88411 		str	r1, [r2, #388]
 635              		.loc 1 624 0
 636 00b4 997D     		ldrb	r1, [r3, #22]	@ zero_extendqisi2
 637 00b6 93F817C0 		ldrb	ip, [r3, #23]	@ zero_extendqisi2
 638 00ba 187D     		ldrb	r0, [r3, #20]	@ zero_extendqisi2
 639 00bc 0904     		lsls	r1, r1, #16
 640 00be 41EA0C61 		orr	r1, r1, ip, lsl #24
 641 00c2 93F815C0 		ldrb	ip, [r3, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccwnAXFK.s 			page 25


 642 00c6 0143     		orrs	r1, r1, r0
 643 00c8 41EA0C21 		orr	r1, r1, ip, lsl #8
 644 00cc C7F88811 		str	r1, [r7, #392]
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[2] <<
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[1] <<
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[0] <<
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR, ((uint32_t)hcan->pTxMsg->Data[7] <<
 645              		.loc 1 628 0
 646 00d0 987E     		ldrb	r0, [r3, #26]	@ zero_extendqisi2
 647 00d2 DF7E     		ldrb	r7, [r3, #27]	@ zero_extendqisi2
 648 00d4 197E     		ldrb	r1, [r3, #24]	@ zero_extendqisi2
 649 00d6 0004     		lsls	r0, r0, #16
 650 00d8 40EA0760 		orr	r0, r0, r7, lsl #24
 651 00dc 5F7E     		ldrb	r7, [r3, #25]	@ zero_extendqisi2
 652 00de 40EA0103 		orr	r3, r0, r1
 653 00e2 43EA0723 		orr	r3, r3, r7, lsl #8
 654 00e6 CEF80430 		str	r3, [lr, #4]
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[6] <<
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[5] <<
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[4] <<
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request transmission */
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 655              		.loc 1 633 0
 656 00ea D2F88031 		ldr	r3, [r2, #384]
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get tick */
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tickstart = HAL_GetTick();
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check End of transmission flag */
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     while(!(__HAL_CAN_TRANSMIT_STATUS(hcan, transmitmailbox)))
 657              		.loc 1 639 0
 658 00ee DFF82481 		ldr	r8, .L97+4
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 659              		.loc 1 633 0
 660 00f2 43F00103 		orr	r3, r3, #1
 661 00f6 C2F88031 		str	r3, [r2, #384]
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 662              		.loc 1 636 0
 663 00fa FFF7FEFF 		bl	HAL_GetTick
 664              	.LVL46:
 665 00fe 8246     		mov	r10, r0
 666              	.LVL47:
 667              		.loc 1 639 0
 668 0100 DFF81491 		ldr	r9, .L97+8
 669 0104 424F     		ldr	r7, .L97
 670              	.LVL48:
 671              	.L62:
 672 0106 3268     		ldr	r2, [r6]
 673              	.L63:
 674 0108 414B     		ldr	r3, .L97
 675 010a 002C     		cmp	r4, #0
 676 010c 34D1     		bne	.L70
 677              		.loc 1 639 0 is_stmt 0 discriminator 1
 678 010e 9168     		ldr	r1, [r2, #8]
 679 0110 0B40     		ands	r3, r3, r1
 680 0112 DB1B     		subs	r3, r3, r7
 681 0114 18BF     		it	ne
ARM GAS  /tmp/ccwnAXFK.s 			page 26


 682 0116 0123     		movne	r3, #1
 683              	.L71:
 684              		.loc 1 639 0 discriminator 8
 685 0118 002B     		cmp	r3, #0
 686 011a 38D0     		beq	.L92
 687              	.L73:
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check for the Timeout */
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if(Timeout != HAL_MAX_DELAY)
 688              		.loc 1 642 0 is_stmt 1
 689 011c 6B1C     		adds	r3, r5, #1
 690 011e F3D0     		beq	.L63
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 691              		.loc 1 644 0
 692 0120 35B1     		cbz	r5, .L67
 693              		.loc 1 644 0 is_stmt 0 discriminator 1
 694 0122 FFF7FEFF 		bl	HAL_GetTick
 695              	.LVL49:
 696 0126 CAEB0000 		rsb	r0, r10, r0
 697 012a 8542     		cmp	r5, r0
 698 012c EBD2     		bcs	.L62
 699 012e 3268     		ldr	r2, [r6]
 700              	.L67:
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_TIMEOUT;
 701              		.loc 1 646 0 is_stmt 1
 702 0130 0323     		movs	r3, #3
 703 0132 86F83C30 		strb	r3, [r6, #60]
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Cancel transmission */
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           __HAL_CAN_CANCEL_TRANSMIT(hcan, transmitmailbox);
 704              		.loc 1 649 0
 705 0136 002C     		cmp	r4, #0
 706 0138 61D1     		bne	.L93
 707              		.loc 1 649 0 is_stmt 0 discriminator 1
 708 013a 8023     		movs	r3, #128
 709 013c 9360     		str	r3, [r2, #8]
 710              	.L68:
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Process unlocked */
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           __HAL_UNLOCK(hcan);
 711              		.loc 1 652 0 is_stmt 1
 712 013e 0023     		movs	r3, #0
 713 0140 86F83D30 		strb	r3, [r6, #61]
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           return HAL_TIMEOUT;
 714              		.loc 1 653 0
 715 0144 0320     		movs	r0, #3
 716 0146 00E0     		b	.L53
 717              	.LVL50:
 718              	.L79:
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 719              		.loc 1 569 0
 720 0148 0220     		movs	r0, #2
 721              	.LVL51:
 722              	.L53:
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
ARM GAS  /tmp/ccwnAXFK.s 			page 27


 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX0;
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX1;
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_TX */
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_READY;
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process unlocked */
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR;
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 723              		.loc 1 688 0
 724 014a 02B0     		add	sp, sp, #8
 725              	.LCFI7:
 726              		.cfi_remember_state
 727              		.cfi_def_cfa_offset 32
 728              		@ sp needed
 729 014c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 730              	.LVL52:
 731              	.L90:
 732              	.LCFI8:
 733              		.cfi_restore_state
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 734              		.loc 1 566 0
 735 0150 BB68     		ldr	r3, [r7, #8]
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME2) == CAN_TSR_TME2))
 736              		.loc 1 565 0
 737 0152 DD00     		lsls	r5, r3, #3
 738 0154 3FF55FAF 		bmi	.L51
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 739              		.loc 1 683 0
 740 0158 0423     		movs	r3, #4
 741 015a 80F83C30 		strb	r3, [r0, #60]
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
ARM GAS  /tmp/ccwnAXFK.s 			page 28


 742              		.loc 1 686 0
 743 015e 0120     		movs	r0, #1
 744              	.LVL53:
 745              		.loc 1 688 0
 746 0160 02B0     		add	sp, sp, #8
 747              	.LCFI9:
 748              		.cfi_remember_state
 749              		.cfi_def_cfa_offset 32
 750              		@ sp needed
 751 0162 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 752              	.LVL54:
 753              	.L91:
 754              	.LCFI10:
 755              		.cfi_restore_state
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 756              		.loc 1 575 0
 757 0166 4223     		movs	r3, #66
 758 0168 80F83C30 		strb	r3, [r0, #60]
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 759              		.loc 1 589 0
 760 016c BB68     		ldr	r3, [r7, #8]
 761 016e 5A01     		lsls	r2, r3, #5
 762 0170 7FF56CAF 		bpl	.L94
 763              	.L80:
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 764              		.loc 1 591 0
 765 0174 0024     		movs	r4, #0
 766 0176 6FE7     		b	.L59
 767              	.LVL55:
 768              	.L70:
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 769              		.loc 1 639 0 discriminator 2
 770 0178 012C     		cmp	r4, #1
 771 017a 264B     		ldr	r3, .L97+4
 772 017c 9168     		ldr	r1, [r2, #8]
 773 017e 18D0     		beq	.L95
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 774              		.loc 1 639 0 is_stmt 0 discriminator 5
 775 0180 0B40     		ands	r3, r3, r1
 776 0182 B3EB0803 		subs	r3, r3, r8
 777 0186 18BF     		it	ne
 778 0188 0123     		movne	r3, #1
 779 018a 002B     		cmp	r3, #0
 780 018c C6D1     		bne	.L73
 781              	.L92:
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 782              		.loc 1 658 0 is_stmt 1
 783 018e 96F83C30 		ldrb	r3, [r6, #60]	@ zero_extendqisi2
 784 0192 DBB2     		uxtb	r3, r3
 785 0194 522B     		cmp	r3, #82
 786 0196 2ED0     		beq	.L75
 787 0198 722B     		cmp	r3, #114
 788 019a 28D0     		beq	.L76
 789 019c 422B     		cmp	r3, #66
 790 019e 22D0     		beq	.L96
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 791              		.loc 1 670 0
ARM GAS  /tmp/ccwnAXFK.s 			page 29


 792 01a0 0123     		movs	r3, #1
 793 01a2 86F83C30 		strb	r3, [r6, #60]
 794              	.L78:
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 795              		.loc 1 675 0
 796 01a6 0020     		movs	r0, #0
 797 01a8 86F83D00 		strb	r0, [r6, #61]
 798              		.loc 1 688 0
 799 01ac 02B0     		add	sp, sp, #8
 800              	.LCFI11:
 801              		.cfi_remember_state
 802              		.cfi_def_cfa_offset 32
 803              		@ sp needed
 804 01ae BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 805              	.LVL56:
 806              	.L95:
 807              	.LCFI12:
 808              		.cfi_restore_state
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 809              		.loc 1 639 0 discriminator 4
 810 01b2 194B     		ldr	r3, .L97+8
 811 01b4 0B40     		ands	r3, r3, r1
 812 01b6 B3EB0903 		subs	r3, r3, r9
 813 01ba 18BF     		it	ne
 814 01bc 0123     		movne	r3, #1
 815 01be ABE7     		b	.L71
 816              	.LVL57:
 817              	.L60:
 818 01c0 45EA060C 		orr	ip, r5, r6
 819 01c4 DD68     		ldr	r5, [r3, #12]
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 820              		.loc 1 613 0
 821 01c6 5E68     		ldr	r6, [r3, #4]
 822 01c8 4CEA0505 		orr	r5, ip, r5
 823 01cc 45EAC606 		orr	r6, r5, r6, lsl #3
 824 01d0 C2F88061 		str	r6, [r2, #384]
 825 01d4 5AE7     		b	.L61
 826              	.LVL58:
 827              	.L55:
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 828              		.loc 1 578 0
 829 01d6 5223     		movs	r3, #82
 830 01d8 80F83C30 		strb	r3, [r0, #60]
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 831              		.loc 1 579 0
 832 01dc 32E7     		b	.L58
 833              	.L56:
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 834              		.loc 1 581 0
 835 01de 7223     		movs	r3, #114
 836 01e0 80F83C30 		strb	r3, [r0, #60]
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 837              		.loc 1 582 0
 838 01e4 2EE7     		b	.L58
 839              	.LVL59:
 840              	.L96:
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
ARM GAS  /tmp/ccwnAXFK.s 			page 30


 841              		.loc 1 661 0
 842 01e6 2223     		movs	r3, #34
 843 01e8 86F83C30 		strb	r3, [r6, #60]
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 844              		.loc 1 662 0
 845 01ec DBE7     		b	.L78
 846              	.L76:
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 847              		.loc 1 667 0
 848 01ee 6223     		movs	r3, #98
 849 01f0 86F83C30 		strb	r3, [r6, #60]
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_TX */
 850              		.loc 1 668 0
 851 01f4 D7E7     		b	.L78
 852              	.L75:
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 853              		.loc 1 664 0
 854 01f6 3223     		movs	r3, #50
 855 01f8 86F83C30 		strb	r3, [r6, #60]
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 856              		.loc 1 665 0
 857 01fc D3E7     		b	.L78
 858              	.L93:
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 859              		.loc 1 649 0 discriminator 2
 860 01fe 012C     		cmp	r4, #1
 861 0200 0CBF     		ite	eq
 862 0202 4FF40043 		moveq	r3, #32768
 863 0206 4FF40003 		movne	r3, #8388608
 864 020a 9360     		str	r3, [r2, #8]
 865 020c 97E7     		b	.L68
 866              	.L98:
 867 020e 00BF     		.align	2
 868              	.L97:
 869 0210 01000004 		.word	67108865
 870 0214 00000110 		.word	268500992
 871 0218 00010008 		.word	134217984
 872              		.cfi_endproc
 873              	.LFE68:
 875              		.section	.text.HAL_CAN_Transmit_IT,"ax",%progbits
 876              		.align	2
 877              		.global	HAL_CAN_Transmit_IT
 878              		.thumb
 879              		.thumb_func
 881              	HAL_CAN_Transmit_IT:
 882              	.LFB69:
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Transmit_IT(CAN_HandleTypeDef* hcan)
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 883              		.loc 1 697 0
 884              		.cfi_startproc
ARM GAS  /tmp/ccwnAXFK.s 			page 31


 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              	.LVL60:
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(hcan->pTxMsg->IDE));
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RTR(hcan->pTxMsg->RTR));
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_DLC(hcan->pTxMsg->DLC));
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(((hcan->Instance->TSR&CAN_TSR_TME0) == CAN_TSR_TME0) || \
 888              		.loc 1 705 0
 889 0000 0268     		ldr	r2, [r0]
 890 0002 9368     		ldr	r3, [r2, #8]
 891 0004 5901     		lsls	r1, r3, #5
 892 0006 02D4     		bmi	.L100
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 893              		.loc 1 706 0 discriminator 1
 894 0008 9368     		ldr	r3, [r2, #8]
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 895              		.loc 1 705 0 discriminator 1
 896 000a 1B01     		lsls	r3, r3, #4
 897 000c 71D5     		bpl	.L117
 898              	.L100:
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME2) == CAN_TSR_TME2))
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process Locked */
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_LOCK(hcan);
 899              		.loc 1 710 0
 900 000e 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 901 0012 012B     		cmp	r3, #1
 902 0014 6BD0     		beq	.L111
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Select one empty transmit mailbox */
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME0))
 903              		.loc 1 713 0 discriminator 2
 904 0016 9368     		ldr	r3, [r2, #8]
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 905              		.loc 1 710 0 discriminator 2
 906 0018 0121     		movs	r1, #1
 907              		.loc 1 713 0 discriminator 2
 908 001a 5B01     		lsls	r3, r3, #5
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 909              		.loc 1 697 0 discriminator 2
 910 001c F0B5     		push	{r4, r5, r6, r7, lr}
 911              	.LCFI13:
 912              		.cfi_def_cfa_offset 20
 913              		.cfi_offset 4, -20
 914              		.cfi_offset 5, -16
 915              		.cfi_offset 6, -12
 916              		.cfi_offset 7, -8
 917              		.cfi_offset 14, -4
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 918              		.loc 1 710 0 discriminator 2
 919 001e 80F83D10 		strb	r1, [r0, #61]
 920              		.loc 1 713 0 discriminator 2
 921 0022 77D4     		bmi	.L112
ARM GAS  /tmp/ccwnAXFK.s 			page 32


 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_0;
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else if(HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME1))
 922              		.loc 1 717 0
 923 0024 9368     		ldr	r3, [r2, #8]
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_1;
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_2;
 924              		.loc 1 723 0
 925 0026 13F0006F 		tst	r3, #134217728
 926 002a 14BF     		ite	ne
 927 002c 0C46     		movne	r4, r1
 928 002e 0224     		moveq	r4, #2
 929              	.L103:
 930              	.LVL61:
 931 0030 2401     		lsls	r4, r4, #4
 932              	.LVL62:
 933 0032 1119     		adds	r1, r2, r4
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the Id */
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR &= CAN_TI0R_TXRQ;
 934              		.loc 1 727 0
 935 0034 D1F88051 		ldr	r5, [r1, #384]
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(hcan->pTxMsg->IDE == CAN_ID_STD)
 936              		.loc 1 728 0
 937 0038 036B     		ldr	r3, [r0, #48]
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(hcan->pTxMsg->IDE == CAN_ID_STD)
 938              		.loc 1 727 0
 939 003a 05F00105 		and	r5, r5, #1
 940 003e C1F88051 		str	r5, [r1, #384]
 941              		.loc 1 728 0
 942 0042 9D68     		ldr	r5, [r3, #8]
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       assert_param(IS_CAN_STDID(hcan->pTxMsg->StdId));
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->StdId << CAN_TI0R_STID_Pos
 943              		.loc 1 731 0
 944 0044 D1F88071 		ldr	r7, [r1, #384]
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 945              		.loc 1 728 0
 946 0048 002D     		cmp	r5, #0
 947 004a 5AD1     		bne	.L104
 948 004c DD68     		ldr	r5, [r3, #12]
 949              		.loc 1 731 0
 950 004e 1E68     		ldr	r6, [r3]
 951 0050 3D43     		orrs	r5, r5, r7
 952 0052 45EA4655 		orr	r5, r5, r6, lsl #21
 953 0056 C1F88051 		str	r5, [r1, #384]
 954              	.L105:
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
ARM GAS  /tmp/ccwnAXFK.s 			page 33


 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       assert_param(IS_CAN_EXTID(hcan->pTxMsg->ExtId));
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->ExtId << CAN_TI0R_EXID_Pos
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the DLC */
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->pTxMsg->DLC &= (uint8_t)0x0000000FU;
 955              		.loc 1 743 0
 956 005a 1D69     		ldr	r5, [r3, #16]
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR |= hcan->pTxMsg->DLC;
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the data field */
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR, ((uint32_t)hcan->pTxMsg->Data[3U] <
 957              		.loc 1 748 0
 958 005c 1444     		add	r4, r4, r2
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 959              		.loc 1 743 0
 960 005e 05F00F05 		and	r5, r5, #15
 961 0062 1D61     		str	r5, [r3, #16]
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 962              		.loc 1 744 0
 963 0064 D1F88471 		ldr	r7, [r1, #388]
 964              		.loc 1 748 0
 965 0068 04F5C476 		add	r6, r4, #392
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 966              		.loc 1 744 0
 967 006c 27F00F07 		bic	r7, r7, #15
 968 0070 C1F88471 		str	r7, [r1, #388]
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 969              		.loc 1 745 0
 970 0074 D1F88471 		ldr	r7, [r1, #388]
 971 0078 3D43     		orrs	r5, r5, r7
 972 007a C1F88451 		str	r5, [r1, #388]
 973              		.loc 1 748 0
 974 007e 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 975 0080 93F817E0 		ldrb	lr, [r3, #23]	@ zero_extendqisi2
 976 0084 1F7D     		ldrb	r7, [r3, #20]	@ zero_extendqisi2
 977 0086 2D04     		lsls	r5, r5, #16
 978 0088 45EA0E65 		orr	r5, r5, lr, lsl #24
 979 008c 93F815E0 		ldrb	lr, [r3, #21]	@ zero_extendqisi2
 980 0090 3D43     		orrs	r5, r5, r7
 981 0092 45EA0E25 		orr	r5, r5, lr, lsl #8
 982 0096 C4F88851 		str	r5, [r4, #392]
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[2U] <
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[1U] <
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[0U] <
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR, ((uint32_t)hcan->pTxMsg->Data[7U] <
 983              		.loc 1 752 0
 984 009a 9D7E     		ldrb	r5, [r3, #26]	@ zero_extendqisi2
 985 009c DF7E     		ldrb	r7, [r3, #27]	@ zero_extendqisi2
 986 009e 1C7E     		ldrb	r4, [r3, #24]	@ zero_extendqisi2
 987 00a0 2D04     		lsls	r5, r5, #16
 988 00a2 45EA0765 		orr	r5, r5, r7, lsl #24
 989 00a6 5F7E     		ldrb	r7, [r3, #25]	@ zero_extendqisi2
 990 00a8 45EA0403 		orr	r3, r5, r4
ARM GAS  /tmp/ccwnAXFK.s 			page 34


 991 00ac 43EA0723 		orr	r3, r3, r7, lsl #8
 992 00b0 7360     		str	r3, [r6, #4]
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[6U] <
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[5U] <
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[4U] <
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 993              		.loc 1 758 0
 994 00b2 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 995 00b6 DBB2     		uxtb	r3, r3
 996 00b8 322B     		cmp	r3, #50
 997 00ba 31D0     		beq	.L107
 998 00bc 622B     		cmp	r3, #98
 999 00be 33D0     		beq	.L108
 1000 00c0 222B     		cmp	r3, #34
 1001 00c2 29D0     		beq	.L118
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX;
 1002              		.loc 1 770 0
 1003 00c4 1223     		movs	r3, #18
 1004 00c6 80F83C30 		strb	r3, [r0, #60]
 1005              	.L110:
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to none */
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 1006              		.loc 1 775 0
 1007 00ca 0023     		movs	r3, #0
 1008 00cc 0364     		str	r3, [r0, #64]
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process Unlocked */
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request transmission */
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR |= CAN_TI0R_TXRQ;
 1009              		.loc 1 781 0
 1010 00ce D1F88041 		ldr	r4, [r1, #384]
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1011              		.loc 1 778 0
 1012 00d2 80F83D30 		strb	r3, [r0, #61]
 1013              		.loc 1 781 0
 1014 00d6 44F00100 		orr	r0, r4, #1
 1015              	.LVL63:
 1016 00da C1F88001 		str	r0, [r1, #384]
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccwnAXFK.s 			page 35


 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Enable interrupts: */
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Error warning Interrupt */
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Error passive Interrupt */
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Bus-off Interrupt */
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Last error code Interrupt */
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Error Interrupt */
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Transmit mailbox empty Interrupt */
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_EWG |
 1017              		.loc 1 790 0
 1018 00de 5169     		ldr	r1, [r2, #20]
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_EPV |
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_BOF |
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_LEC |
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_ERR |
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_TME  );
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR;
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 1019              		.loc 1 806 0
 1020 00e0 1846     		mov	r0, r3
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_EPV |
 1021              		.loc 1 790 0
 1022 00e2 41F40F43 		orr	r3, r1, #36608
 1023 00e6 43F00103 		orr	r3, r3, #1
 1024 00ea 5361     		str	r3, [r2, #20]
 1025              		.loc 1 806 0
 1026 00ec F0BD     		pop	{r4, r5, r6, r7, pc}
 1027              	.LVL64:
 1028              	.L111:
 1029              	.LCFI14:
 1030              		.cfi_def_cfa_offset 0
 1031              		.cfi_restore 4
 1032              		.cfi_restore 5
 1033              		.cfi_restore 6
 1034              		.cfi_restore 7
 1035              		.cfi_restore 14
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 1036              		.loc 1 710 0
 1037 00ee 0220     		movs	r0, #2
 1038              	.LVL65:
 1039 00f0 7047     		bx	lr
 1040              	.LVL66:
 1041              	.L117:
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1042              		.loc 1 707 0
 1043 00f2 9368     		ldr	r3, [r2, #8]
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME2) == CAN_TSR_TME2))
 1044              		.loc 1 706 0
 1045 00f4 D900     		lsls	r1, r3, #3
ARM GAS  /tmp/ccwnAXFK.s 			page 36


 1046 00f6 8AD4     		bmi	.L100
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1047              		.loc 1 800 0
 1048 00f8 0423     		movs	r3, #4
 1049 00fa 80F83C30 		strb	r3, [r0, #60]
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1050              		.loc 1 803 0
 1051 00fe 0120     		movs	r0, #1
 1052              	.LVL67:
 1053 0100 7047     		bx	lr
 1054              	.LVL68:
 1055              	.L104:
 1056              	.LCFI15:
 1057              		.cfi_def_cfa_offset 20
 1058              		.cfi_offset 4, -20
 1059              		.cfi_offset 5, -16
 1060              		.cfi_offset 6, -12
 1061              		.cfi_offset 7, -8
 1062              		.cfi_offset 14, -4
 1063 0102 DE68     		ldr	r6, [r3, #12]
 1064 0104 3D43     		orrs	r5, r5, r7
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 1065              		.loc 1 737 0
 1066 0106 5F68     		ldr	r7, [r3, #4]
 1067 0108 3543     		orrs	r5, r5, r6
 1068 010a 45EAC705 		orr	r5, r5, r7, lsl #3
 1069 010e C1F88051 		str	r5, [r1, #384]
 1070 0112 A2E7     		b	.L105
 1071              	.LVL69:
 1072              	.L112:
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1073              		.loc 1 715 0
 1074 0114 0024     		movs	r4, #0
 1075 0116 8BE7     		b	.L103
 1076              	.LVL70:
 1077              	.L118:
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 1078              		.loc 1 761 0
 1079 0118 4223     		movs	r3, #66
 1080 011a 80F83C30 		strb	r3, [r0, #60]
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 1081              		.loc 1 762 0
 1082 011e D4E7     		b	.L110
 1083              	.L107:
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 1084              		.loc 1 764 0
 1085 0120 5223     		movs	r3, #82
 1086 0122 80F83C30 		strb	r3, [r0, #60]
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 1087              		.loc 1 765 0
 1088 0126 D0E7     		b	.L110
 1089              	.L108:
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 1090              		.loc 1 767 0
 1091 0128 7223     		movs	r3, #114
 1092 012a 80F83C30 		strb	r3, [r0, #60]
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
ARM GAS  /tmp/ccwnAXFK.s 			page 37


 1093              		.loc 1 768 0
 1094 012e CCE7     		b	.L110
 1095              		.cfi_endproc
 1096              	.LFE69:
 1098              		.section	.text.HAL_CAN_Receive,"ax",%progbits
 1099              		.align	2
 1100              		.global	HAL_CAN_Receive
 1101              		.thumb
 1102              		.thumb_func
 1104              	HAL_CAN_Receive:
 1105              	.LFB70:
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  FIFONumber: FIFO Number value
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  Timeout: Specify Timeout value 
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Receive(CAN_HandleTypeDef* hcan, uint8_t FIFONumber, uint32_t Timeout)
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1106              		.loc 1 818 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 1110              	.LVL71:
 1111 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1112              	.LCFI16:
 1113              		.cfi_def_cfa_offset 24
 1114              		.cfi_offset 3, -24
 1115              		.cfi_offset 4, -20
 1116              		.cfi_offset 5, -16
 1117              		.cfi_offset 6, -12
 1118              		.cfi_offset 7, -8
 1119              		.cfi_offset 14, -4
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CanRxMsgTypeDef* pRxMsg = NULL;
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO0 */
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO0) && ((hcan->State == HAL_CAN_STATE_BUSY_RX0) ||         \
 1120              		.loc 1 826 0
 1121 0002 29BB     		cbnz	r1, .L120
 1122              		.loc 1 826 0 is_stmt 0 discriminator 1
 1123 0004 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1124 0008 222B     		cmp	r3, #34
 1125 000a 33D0     		beq	.L164
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1126              		.loc 1 827 0 is_stmt 1 discriminator 2
 1127 000c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1128              		.loc 1 826 0 discriminator 2
 1129 0010 422B     		cmp	r3, #66
ARM GAS  /tmp/ccwnAXFK.s 			page 38


 1130 0012 2FD0     		beq	.L164
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1131              		.loc 1 828 0
 1132 0014 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1133              		.loc 1 827 0
 1134 0018 622B     		cmp	r3, #98
 1135 001a 2BD0     		beq	.L164
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1136              		.loc 1 829 0
 1137 001c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1138              		.loc 1 828 0
 1139 0020 722B     		cmp	r3, #114
 1140 0022 27D0     		beq	.L164
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_BUSY;
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO1 */
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO1) && ((hcan->State == HAL_CAN_STATE_BUSY_RX1) ||         \
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_BUSY;
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process locked */
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_LOCK(hcan);
 1141              		.loc 1 844 0
 1142 0024 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1143 0028 012B     		cmp	r3, #1
 1144 002a 23D0     		beq	.L164
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 1145              		.loc 1 849 0
 1146 002c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1147              		.loc 1 844 0
 1148 0030 0124     		movs	r4, #1
 1149              		.loc 1 849 0
 1150 0032 DBB2     		uxtb	r3, r3
 1151 0034 322B     		cmp	r3, #50
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1152              		.loc 1 844 0
 1153 0036 80F83D40 		strb	r4, [r0, #61]
 1154              		.loc 1 849 0
 1155 003a 33D0     		beq	.L130
 1156 003c 522B     		cmp	r3, #82
 1157 003e 00F0D380 		beq	.L131
 1158 0042 122B     		cmp	r3, #18
 1159 0044 00F0D480 		beq	.L178
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
ARM GAS  /tmp/ccwnAXFK.s 			page 39


 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 1160              		.loc 1 861 0
 1161 0048 2223     		movs	r3, #34
 1162 004a 80F83C30 		strb	r3, [r0, #60]
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1163              		.loc 1 862 0
 1164 004e 2CE0     		b	.L125
 1165              	.L120:
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1166              		.loc 1 835 0
 1167 0050 0129     		cmp	r1, #1
 1168 0052 11D1     		bne	.L123
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1169              		.loc 1 835 0 is_stmt 0 discriminator 1
 1170 0054 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1171 0058 322B     		cmp	r3, #50
 1172 005a 0BD0     		beq	.L164
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1173              		.loc 1 836 0 is_stmt 1 discriminator 2
 1174 005c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1175              		.loc 1 835 0 discriminator 2
 1176 0060 522B     		cmp	r3, #82
 1177 0062 07D0     		beq	.L164
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1178              		.loc 1 837 0
 1179 0064 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1180              		.loc 1 836 0
 1181 0068 622B     		cmp	r3, #98
 1182 006a 03D0     		beq	.L164
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1183              		.loc 1 838 0
 1184 006c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1185              		.loc 1 837 0
 1186 0070 722B     		cmp	r3, #114
 1187 0072 01D1     		bne	.L123
 1188              	.L164:
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1189              		.loc 1 831 0
 1190 0074 0220     		movs	r0, #2
 1191              	.LVL72:
 1192 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1193              	.LVL73:
 1194              	.L123:
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccwnAXFK.s 			page 40


 1195              		.loc 1 844 0
 1196 0078 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1197 007c 012B     		cmp	r3, #1
 1198 007e F9D0     		beq	.L164
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 1199              		.loc 1 867 0
 1200 0080 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1201              		.loc 1 844 0
 1202 0084 0124     		movs	r4, #1
 1203              		.loc 1 867 0
 1204 0086 DBB2     		uxtb	r3, r3
 1205 0088 222B     		cmp	r3, #34
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1206              		.loc 1 844 0
 1207 008a 80F83D40 		strb	r4, [r0, #61]
 1208              		.loc 1 867 0
 1209 008e 09D0     		beq	.L130
 1210 0090 422B     		cmp	r3, #66
 1211 0092 00F0A980 		beq	.L131
 1212 0096 122B     		cmp	r3, #18
 1213 0098 00F0BE80 		beq	.L179
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
 1214              		.loc 1 879 0
 1215 009c 3223     		movs	r3, #50
 1216 009e 80F83C30 		strb	r3, [r0, #60]
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1217              		.loc 1 880 0
 1218 00a2 02E0     		b	.L125
 1219              	.L130:
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1220              		.loc 1 873 0
 1221 00a4 6223     		movs	r3, #98
 1222 00a6 80F83C30 		strb	r3, [r0, #60]
 1223              	.L125:
 1224 00aa 0C46     		mov	r4, r1
 1225 00ac 1646     		mov	r6, r2
 1226 00ae 0546     		mov	r5, r0
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get tick */ 
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();
ARM GAS  /tmp/ccwnAXFK.s 			page 41


 1227              		.loc 1 884 0
 1228 00b0 FFF7FEFF 		bl	HAL_GetTick
 1229              	.LVL74:
 1230 00b4 0746     		mov	r7, r0
 1231              	.LVL75:
 1232              	.L133:
 1233 00b6 2A68     		ldr	r2, [r5]
 1234              	.L134:
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check pending message */
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while(__HAL_CAN_MSG_PENDING(hcan, FIFONumber) == 0U)
 1235              		.loc 1 887 0
 1236 00b8 ACB9     		cbnz	r4, .L137
 1237              		.loc 1 887 0 is_stmt 0 discriminator 1
 1238 00ba D368     		ldr	r3, [r2, #12]
 1239 00bc 13F0030F 		tst	r3, #3
 1240 00c0 0CBF     		ite	eq
 1241 00c2 0123     		moveq	r3, #1
 1242 00c4 0023     		movne	r3, #0
 1243 00c6 B3B1     		cbz	r3, .L180
 1244              	.L139:
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check for the Timeout */
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(Timeout != HAL_MAX_DELAY)
 1245              		.loc 1 890 0 is_stmt 1
 1246 00c8 731C     		adds	r3, r6, #1
 1247 00ca F5D0     		beq	.L134
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 1248              		.loc 1 892 0
 1249 00cc 26B1     		cbz	r6, .L136
 1250              		.loc 1 892 0 is_stmt 0 discriminator 1
 1251 00ce FFF7FEFF 		bl	HAL_GetTick
 1252              	.LVL76:
 1253 00d2 C01B     		subs	r0, r0, r7
 1254 00d4 8642     		cmp	r6, r0
 1255 00d6 EED2     		bcs	.L133
 1256              	.L136:
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_TIMEOUT;
 1257              		.loc 1 894 0 is_stmt 1
 1258 00d8 0320     		movs	r0, #3
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Process unlocked */
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         __HAL_UNLOCK(hcan);
 1259              		.loc 1 896 0
 1260 00da 0023     		movs	r3, #0
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Process unlocked */
 1261              		.loc 1 894 0
 1262 00dc 85F83C00 		strb	r0, [r5, #60]
 1263              		.loc 1 896 0
 1264 00e0 85F83D30 		strb	r3, [r5, #61]
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_TIMEOUT;
 1265              		.loc 1 897 0
 1266 00e4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1267              	.LVL77:
 1268              	.L137:
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccwnAXFK.s 			page 42


 1269              		.loc 1 887 0 discriminator 2
 1270 00e6 1369     		ldr	r3, [r2, #16]
 1271 00e8 13F0030F 		tst	r3, #3
 1272 00ec 0CBF     		ite	eq
 1273 00ee 0123     		moveq	r3, #1
 1274 00f0 0023     		movne	r3, #0
 1275 00f2 002B     		cmp	r3, #0
 1276 00f4 E8D1     		bne	.L139
 1277              	.L180:
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set RxMsg pointer */
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg = hcan->pRxMsg;
 1278              		.loc 1 905 0
 1279 00f6 6B6B     		ldr	r3, [r5, #52]
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg = hcan->pRx1Msg;
 1280              		.loc 1 909 0
 1281 00f8 A96B     		ldr	r1, [r5, #56]
 1282 00fa 2001     		lsls	r0, r4, #4
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1283              		.loc 1 905 0
 1284 00fc 002C     		cmp	r4, #0
 1285 00fe 08BF     		it	eq
 1286 0100 1946     		moveq	r1, r3
 1287              	.LVL78:
 1288 0102 1618     		adds	r6, r2, r0
 1289              	.LVL79:
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the Id */
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->IDE = (uint8_t)CAN_ID_EXT & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 1290              		.loc 1 913 0
 1291 0104 D6F8B031 		ldr	r3, [r6, #432]
 1292 0108 03F00403 		and	r3, r3, #4
 1293 010c 8B60     		str	r3, [r1, #8]
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (pRxMsg->IDE == CAN_ID_STD)
 1294              		.loc 1 914 0
 1295 010e 002B     		cmp	r3, #0
 1296 0110 65D1     		bne	.L141
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg->StdId = 0x000007FFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RIR >> 21U);
 1297              		.loc 1 916 0
 1298 0112 D6F8B031 		ldr	r3, [r6, #432]
 1299 0116 5B0D     		lsrs	r3, r3, #21
 1300 0118 0B60     		str	r3, [r1]
 1301              	.L142:
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg->ExtId = 0x1FFFFFFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RIR >> 3U);
ARM GAS  /tmp/ccwnAXFK.s 			page 43


 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->RTR = (uint8_t)CAN_RTR_REMOTE & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 1302              		.loc 1 923 0
 1303 011a D6F8B071 		ldr	r7, [r6, #432]
 1304              	.LVL80:
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the DLC */
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->DLC = (uint8_t)0x0FU & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR;
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FMI */
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->FMI = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDTR >> 8U);
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FIFONumber */
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->FIFONumber = FIFONumber;
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the data field */
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[0] = (uint8_t)0xFFU & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR;
 1305              		.loc 1 931 0
 1306 011e 1318     		adds	r3, r2, r0
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the DLC */
 1307              		.loc 1 923 0
 1308 0120 07F00202 		and	r2, r7, #2
 1309 0124 CA60     		str	r2, [r1, #12]
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FMI */
 1310              		.loc 1 925 0
 1311 0126 D6F8B421 		ldr	r2, [r6, #436]
 1312 012a 02F00F02 		and	r2, r2, #15
 1313 012e 0A61     		str	r2, [r1, #16]
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FIFONumber */
 1314              		.loc 1 927 0
 1315 0130 D6F8B421 		ldr	r2, [r6, #436]
 1316              		.loc 1 931 0
 1317 0134 D3F8B831 		ldr	r3, [r3, #440]
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FIFONumber */
 1318              		.loc 1 927 0
 1319 0138 C2F30722 		ubfx	r2, r2, #8, #8
 1320              		.loc 1 931 0
 1321 013c 0B75     		strb	r3, [r1, #20]
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[1] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 8U);
 1322              		.loc 1 932 0
 1323 013e 2B68     		ldr	r3, [r5]
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FIFONumber */
 1324              		.loc 1 927 0
 1325 0140 CA61     		str	r2, [r1, #28]
 1326              		.loc 1 932 0
 1327 0142 0344     		add	r3, r3, r0
 1328 0144 D3F8B831 		ldr	r3, [r3, #440]
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[2] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 16U);
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[3] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 24U);
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[4] = (uint8_t)0xFFU & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR;
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[5] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 8U);
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[6] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 16U);
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[7] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 24U);
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release the FIFO */
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Release FIFO0 */
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO0);
 1329              		.loc 1 944 0
ARM GAS  /tmp/ccwnAXFK.s 			page 44


 1330 0148 2022     		movs	r2, #32
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[1] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 8U);
 1331              		.loc 1 932 0
 1332 014a 1B0A     		lsrs	r3, r3, #8
 1333 014c 4B75     		strb	r3, [r1, #21]
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[2] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 16U);
 1334              		.loc 1 933 0
 1335 014e 2B68     		ldr	r3, [r5]
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the data field */
 1336              		.loc 1 929 0
 1337 0150 0C62     		str	r4, [r1, #32]
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[2] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 16U);
 1338              		.loc 1 933 0
 1339 0152 0344     		add	r3, r3, r0
 1340 0154 D3F8B831 		ldr	r3, [r3, #440]
 1341 0158 1B0C     		lsrs	r3, r3, #16
 1342 015a 8B75     		strb	r3, [r1, #22]
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[4] = (uint8_t)0xFFU & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR;
 1343              		.loc 1 934 0
 1344 015c 2B68     		ldr	r3, [r5]
 1345 015e 0344     		add	r3, r3, r0
 1346 0160 D3F8B831 		ldr	r3, [r3, #440]
 1347 0164 1B0E     		lsrs	r3, r3, #24
 1348 0166 CB75     		strb	r3, [r1, #23]
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[5] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 8U);
 1349              		.loc 1 935 0
 1350 0168 2B68     		ldr	r3, [r5]
 1351 016a 0344     		add	r3, r3, r0
 1352 016c 03F5DC73 		add	r3, r3, #440
 1353 0170 5B68     		ldr	r3, [r3, #4]
 1354 0172 0B76     		strb	r3, [r1, #24]
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[6] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 16U);
 1355              		.loc 1 936 0
 1356 0174 2B68     		ldr	r3, [r5]
 1357 0176 0344     		add	r3, r3, r0
 1358 0178 03F5DC73 		add	r3, r3, #440
 1359 017c 5B68     		ldr	r3, [r3, #4]
 1360 017e 1B0A     		lsrs	r3, r3, #8
 1361 0180 4B76     		strb	r3, [r1, #25]
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[7] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 24U);
 1362              		.loc 1 937 0
 1363 0182 2B68     		ldr	r3, [r5]
 1364 0184 0344     		add	r3, r3, r0
 1365 0186 03F5DC73 		add	r3, r3, #440
 1366 018a 5B68     		ldr	r3, [r3, #4]
 1367 018c 1B0C     		lsrs	r3, r3, #16
 1368 018e 8B76     		strb	r3, [r1, #26]
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1369              		.loc 1 938 0
 1370 0190 2B68     		ldr	r3, [r5]
 1371 0192 1844     		add	r0, r0, r3
 1372 0194 D0F8BC31 		ldr	r3, [r0, #444]
 1373 0198 1B0E     		lsrs	r3, r3, #24
 1374 019a CB76     		strb	r3, [r1, #27]
 1375              		.loc 1 944 0
 1376 019c 2B68     		ldr	r3, [r5]
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccwnAXFK.s 			page 45


 1377              		.loc 1 941 0
 1378 019e 84B9     		cbnz	r4, .L143
 1379              		.loc 1 944 0
 1380 01a0 DA60     		str	r2, [r3, #12]
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Release FIFO1 */
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO1);
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 1381              		.loc 1 955 0
 1382 01a2 95F83C30 		ldrb	r3, [r5, #60]	@ zero_extendqisi2
 1383 01a6 DBB2     		uxtb	r3, r3
 1384 01a8 622B     		cmp	r3, #98
 1385 01aa 31D0     		beq	.L145
 1386 01ac 722B     		cmp	r3, #114
 1387 01ae 2BD0     		beq	.L146
 1388 01b0 422B     		cmp	r3, #66
 1389 01b2 10D0     		beq	.L151
 1390              	.L170:
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 1391              		.loc 1 985 0
 1392 01b4 0123     		movs	r3, #1
ARM GAS  /tmp/ccwnAXFK.s 			page 46


 1393 01b6 85F83C30 		strb	r3, [r5, #60]
 1394              	.L152:
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process unlocked */
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 1395              		.loc 1 991 0
 1396 01ba 0020     		movs	r0, #0
 1397 01bc 85F83D00 		strb	r0, [r5, #61]
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 1398              		.loc 1 994 0
 1399 01c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1400              	.LVL81:
 1401              	.L143:
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1402              		.loc 1 949 0
 1403 01c2 1A61     		str	r2, [r3, #16]
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1404              		.loc 1 973 0
 1405 01c4 95F83C30 		ldrb	r3, [r5, #60]	@ zero_extendqisi2
 1406 01c8 DBB2     		uxtb	r3, r3
 1407 01ca 622B     		cmp	r3, #98
 1408 01cc 18D0     		beq	.L149
 1409 01ce 722B     		cmp	r3, #114
 1410 01d0 12D0     		beq	.L150
 1411 01d2 522B     		cmp	r3, #82
 1412 01d4 EED1     		bne	.L170
 1413              	.L151:
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1414              		.loc 1 976 0
 1415 01d6 1223     		movs	r3, #18
 1416 01d8 85F83C30 		strb	r3, [r5, #60]
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 1417              		.loc 1 977 0
 1418 01dc EDE7     		b	.L152
 1419              	.LVL82:
 1420              	.L141:
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1421              		.loc 1 920 0
 1422 01de D6F8B031 		ldr	r3, [r6, #432]
 1423 01e2 DB08     		lsrs	r3, r3, #3
 1424 01e4 4B60     		str	r3, [r1, #4]
 1425 01e6 98E7     		b	.L142
 1426              	.LVL83:
 1427              	.L131:
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1428              		.loc 1 876 0
 1429 01e8 7223     		movs	r3, #114
 1430 01ea 80F83C30 		strb	r3, [r0, #60]
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1431              		.loc 1 877 0
 1432 01ee 5CE7     		b	.L125
 1433              	.L178:
ARM GAS  /tmp/ccwnAXFK.s 			page 47


 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1434              		.loc 1 852 0
 1435 01f0 4223     		movs	r3, #66
 1436 01f2 80F83C30 		strb	r3, [r0, #60]
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 1437              		.loc 1 853 0
 1438 01f6 58E7     		b	.L125
 1439              	.LVL84:
 1440              	.L150:
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1441              		.loc 1 982 0
 1442 01f8 4223     		movs	r3, #66
 1443 01fa 85F83C30 		strb	r3, [r5, #60]
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
 1444              		.loc 1 983 0
 1445 01fe DCE7     		b	.L152
 1446              	.L149:
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1447              		.loc 1 979 0
 1448 0200 2223     		movs	r3, #34
 1449 0202 85F83C30 		strb	r3, [r5, #60]
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 1450              		.loc 1 980 0
 1451 0206 D8E7     		b	.L152
 1452              	.L146:
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1453              		.loc 1 964 0
 1454 0208 5223     		movs	r3, #82
 1455 020a 85F83C30 		strb	r3, [r5, #60]
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
 1456              		.loc 1 965 0
 1457 020e D4E7     		b	.L152
 1458              	.L145:
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1459              		.loc 1 961 0
 1460 0210 3223     		movs	r3, #50
 1461 0212 85F83C30 		strb	r3, [r5, #60]
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 1462              		.loc 1 962 0
 1463 0216 D0E7     		b	.L152
 1464              	.LVL85:
 1465              	.L179:
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1466              		.loc 1 870 0
 1467 0218 5223     		movs	r3, #82
 1468 021a 80F83C30 		strb	r3, [r0, #60]
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 1469              		.loc 1 871 0
 1470 021e 44E7     		b	.L125
 1471              		.cfi_endproc
 1472              	.LFE70:
 1474              		.section	.text.HAL_CAN_Receive_IT,"ax",%progbits
 1475              		.align	2
 1476              		.global	HAL_CAN_Receive_IT
 1477              		.thumb
 1478              		.thumb_func
 1480              	HAL_CAN_Receive_IT:
ARM GAS  /tmp/ccwnAXFK.s 			page 48


 1481              	.LFB71:
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  FIFONumber: Specify the FIFO number    
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber)
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1482              		.loc 1 1005 0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 0
 1485              		@ frame_needed = 0, uses_anonymous_args = 0
 1486              		@ link register save eliminated.
 1487              	.LVL86:
 1488 0000 10B4     		push	{r4}
 1489              	.LCFI17:
 1490              		.cfi_def_cfa_offset 4
 1491              		.cfi_offset 4, -4
 1492              		.loc 1 1005 0
 1493 0002 0346     		mov	r3, r0
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO0 */
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((FIFONumber == CAN_FIFO0) && ((hcan->State == HAL_CAN_STATE_BUSY_RX0) ||         \
 1494              		.loc 1 1010 0
 1495 0004 A9BB     		cbnz	r1, .L182
 1496              		.loc 1 1010 0 is_stmt 0 discriminator 1
 1497 0006 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1498 000a 222A     		cmp	r2, #34
 1499 000c 43D0     		beq	.L207
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1500              		.loc 1 1011 0 is_stmt 1 discriminator 2
 1501 000e 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1502              		.loc 1 1010 0 discriminator 2
 1503 0012 422A     		cmp	r2, #66
 1504 0014 3FD0     		beq	.L207
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1505              		.loc 1 1012 0
 1506 0016 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1507              		.loc 1 1011 0
 1508 001a 622A     		cmp	r2, #98
 1509 001c 3BD0     		beq	.L207
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1510              		.loc 1 1013 0
 1511 001e 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1512              		.loc 1 1012 0
 1513 0022 722A     		cmp	r2, #114
 1514 0024 37D0     		beq	.L207
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccwnAXFK.s 			page 49


1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_BUSY;
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO1 */
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((FIFONumber == CAN_FIFO1) && ((hcan->State == HAL_CAN_STATE_BUSY_RX1) ||         \
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_BUSY;
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process locked */
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_LOCK(hcan);
 1515              		.loc 1 1028 0
 1516 0026 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 1517 002a 012A     		cmp	r2, #1
 1518 002c 33D0     		beq	.L207
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 1519              		.loc 1 1033 0
 1520 002e 93F83C20 		ldrb	r2, [r3, #60]	@ zero_extendqisi2
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1521              		.loc 1 1028 0
 1522 0032 0121     		movs	r1, #1
 1523              	.LVL87:
 1524              		.loc 1 1033 0
 1525 0034 D2B2     		uxtb	r2, r2
 1526 0036 322A     		cmp	r2, #50
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1527              		.loc 1 1028 0
 1528 0038 83F83D10 		strb	r1, [r3, #61]
 1529              		.loc 1 1033 0
 1530 003c 61D0     		beq	.L188
 1531 003e 522A     		cmp	r2, #82
 1532 0040 5BD0     		beq	.L189
 1533 0042 122A     		cmp	r2, #18
 1534 0044 55D0     		beq	.L217
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 1535              		.loc 1 1045 0
 1536 0046 2222     		movs	r2, #34
 1537 0048 83F83C20 		strb	r2, [r3, #60]
 1538              	.L187:
ARM GAS  /tmp/ccwnAXFK.s 			page 50


1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set CAN error code to none */
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Enable interrupts: */
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Error warning Interrupt */
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Error passive Interrupt */
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Bus-off Interrupt */
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Last error code Interrupt */
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Error Interrupt */
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Transmit mailbox empty Interrupt */
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_CAN_ENABLE_IT(hcan, CAN_IT_EWG |
 1539              		.loc 1 1078 0
 1540 004c 1968     		ldr	r1, [r3]
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1541              		.loc 1 1068 0
 1542 004e 0024     		movs	r4, #0
 1543 0050 1C64     		str	r4, [r3, #64]
 1544              		.loc 1 1078 0
 1545 0052 4A69     		ldr	r2, [r1, #20]
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_EPV |
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_BOF |
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_LEC |
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_ERR |
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_TME  );
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    /* Process unlocked */
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    __HAL_UNLOCK(hcan);
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Enable FIFO 0 overrun and message pending Interrupt */
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_FOV0 | CAN_IT_FMP0);
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccwnAXFK.s 			page 51


1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Enable FIFO 1 overrun and message pending Interrupt */
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_FOV1 | CAN_IT_FMP1);
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 1546              		.loc 1 1100 0
 1547 0054 2046     		mov	r0, r4
 1548              	.LVL88:
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_EPV |
 1549              		.loc 1 1078 0
 1550 0056 42F40F42 		orr	r2, r2, #36608
 1551 005a 42F00102 		orr	r2, r2, #1
 1552 005e 4A61     		str	r2, [r1, #20]
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1553              		.loc 1 1091 0
 1554 0060 4A69     		ldr	r2, [r1, #20]
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1555              		.loc 1 1086 0
 1556 0062 83F83D40 		strb	r4, [r3, #61]
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1557              		.loc 1 1091 0
 1558 0066 42F00A03 		orr	r3, r2, #10
 1559              	.LVL89:
 1560 006a 4B61     		str	r3, [r1, #20]
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1561              		.loc 1 1101 0
 1562 006c 5DF8044B 		ldr	r4, [sp], #4
 1563              	.LCFI18:
 1564              		.cfi_remember_state
 1565              		.cfi_restore 4
 1566              		.cfi_def_cfa_offset 0
 1567 0070 7047     		bx	lr
 1568              	.LVL90:
 1569              	.L182:
 1570              	.LCFI19:
 1571              		.cfi_restore_state
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1572              		.loc 1 1019 0
 1573 0072 0129     		cmp	r1, #1
 1574 0074 13D1     		bne	.L185
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1575              		.loc 1 1019 0 is_stmt 0 discriminator 1
 1576 0076 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1577 007a 322A     		cmp	r2, #50
 1578 007c 0BD0     		beq	.L207
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1579              		.loc 1 1020 0 is_stmt 1 discriminator 2
 1580 007e 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1581              		.loc 1 1019 0 discriminator 2
 1582 0082 522A     		cmp	r2, #82
 1583 0084 07D0     		beq	.L207
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1584              		.loc 1 1021 0
 1585 0086 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
ARM GAS  /tmp/ccwnAXFK.s 			page 52


 1586              		.loc 1 1020 0
 1587 008a 622A     		cmp	r2, #98
 1588 008c 03D0     		beq	.L207
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1589              		.loc 1 1022 0
 1590 008e 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1591              		.loc 1 1021 0
 1592 0092 722A     		cmp	r2, #114
 1593 0094 03D1     		bne	.L185
 1594              	.L207:
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1595              		.loc 1 1015 0
 1596 0096 0220     		movs	r0, #2
 1597              	.LVL91:
 1598              		.loc 1 1101 0
 1599 0098 5DF8044B 		ldr	r4, [sp], #4
 1600              	.LCFI20:
 1601              		.cfi_remember_state
 1602              		.cfi_restore 4
 1603              		.cfi_def_cfa_offset 0
 1604 009c 7047     		bx	lr
 1605              	.LVL92:
 1606              	.L185:
 1607              	.LCFI21:
 1608              		.cfi_restore_state
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1609              		.loc 1 1028 0
 1610 009e 93F83D20 		ldrb	r2, [r3, #61]	@ zero_extendqisi2
 1611 00a2 012A     		cmp	r2, #1
 1612 00a4 F7D0     		beq	.L207
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1613              		.loc 1 1051 0
 1614 00a6 93F83C20 		ldrb	r2, [r3, #60]	@ zero_extendqisi2
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1615              		.loc 1 1028 0
 1616 00aa 0121     		movs	r1, #1
 1617              	.LVL93:
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1618              		.loc 1 1051 0
 1619 00ac D2B2     		uxtb	r2, r2
 1620 00ae 222A     		cmp	r2, #34
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1621              		.loc 1 1028 0
 1622 00b0 83F83D10 		strb	r1, [r3, #61]
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1623              		.loc 1 1051 0
 1624 00b4 07D0     		beq	.L193
 1625 00b6 422A     		cmp	r2, #66
 1626 00b8 27D0     		beq	.L194
 1627 00ba 122A     		cmp	r2, #18
 1628 00bc 29D0     		beq	.L218
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1629              		.loc 1 1063 0
 1630 00be 3222     		movs	r2, #50
 1631 00c0 83F83C20 		strb	r2, [r3, #60]
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /tmp/ccwnAXFK.s 			page 53


 1632              		.loc 1 1064 0
 1633 00c4 02E0     		b	.L192
 1634              	.L193:
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1635              		.loc 1 1057 0
 1636 00c6 6222     		movs	r2, #98
 1637 00c8 83F83C20 		strb	r2, [r3, #60]
 1638              	.L192:
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_EPV |
 1639              		.loc 1 1078 0
 1640 00cc 1968     		ldr	r1, [r3]
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1641              		.loc 1 1068 0
 1642 00ce 0024     		movs	r4, #0
 1643 00d0 1C64     		str	r4, [r3, #64]
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_EPV |
 1644              		.loc 1 1078 0
 1645 00d2 4A69     		ldr	r2, [r1, #20]
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1646              		.loc 1 1100 0
 1647 00d4 2046     		mov	r0, r4
 1648              	.LVL94:
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_EPV |
 1649              		.loc 1 1078 0
 1650 00d6 42F40F42 		orr	r2, r2, #36608
 1651 00da 42F00102 		orr	r2, r2, #1
 1652 00de 4A61     		str	r2, [r1, #20]
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1653              		.loc 1 1096 0
 1654 00e0 4A69     		ldr	r2, [r1, #20]
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1655              		.loc 1 1086 0
 1656 00e2 83F83D40 		strb	r4, [r3, #61]
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1657              		.loc 1 1096 0
 1658 00e6 42F05003 		orr	r3, r2, #80
 1659              	.LVL95:
 1660 00ea 4B61     		str	r3, [r1, #20]
 1661              		.loc 1 1101 0
 1662 00ec 5DF8044B 		ldr	r4, [sp], #4
 1663              	.LCFI22:
 1664              		.cfi_remember_state
 1665              		.cfi_restore 4
 1666              		.cfi_def_cfa_offset 0
 1667 00f0 7047     		bx	lr
 1668              	.LVL96:
 1669              	.L217:
 1670              	.LCFI23:
 1671              		.cfi_restore_state
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1672              		.loc 1 1036 0
 1673 00f2 4222     		movs	r2, #66
 1674 00f4 83F83C20 		strb	r2, [r3, #60]
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 1675              		.loc 1 1037 0
 1676 00f8 A8E7     		b	.L187
 1677              	.L189:
ARM GAS  /tmp/ccwnAXFK.s 			page 54


1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1678              		.loc 1 1042 0
 1679 00fa 7222     		movs	r2, #114
 1680 00fc 83F83C20 		strb	r2, [r3, #60]
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1681              		.loc 1 1043 0
 1682 0100 A4E7     		b	.L187
 1683              	.L188:
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1684              		.loc 1 1039 0
 1685 0102 6222     		movs	r2, #98
 1686 0104 83F83C20 		strb	r2, [r3, #60]
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 1687              		.loc 1 1040 0
 1688 0108 A0E7     		b	.L187
 1689              	.L194:
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1690              		.loc 1 1060 0
 1691 010a 7222     		movs	r2, #114
 1692 010c 83F83C20 		strb	r2, [r3, #60]
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1693              		.loc 1 1061 0
 1694 0110 DCE7     		b	.L192
 1695              	.L218:
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1696              		.loc 1 1054 0
 1697 0112 5222     		movs	r2, #82
 1698 0114 83F83C20 		strb	r2, [r3, #60]
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 1699              		.loc 1 1055 0
 1700 0118 D8E7     		b	.L192
 1701              		.cfi_endproc
 1702              	.LFE71:
 1704 011a 00BF     		.section	.text.HAL_CAN_Sleep,"ax",%progbits
 1705              		.align	2
 1706              		.global	HAL_CAN_Sleep
 1707              		.thumb
 1708              		.thumb_func
 1710              	HAL_CAN_Sleep:
 1711              	.LFB72:
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Enters the Sleep (low power) mode.
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status.
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Sleep(CAN_HandleTypeDef* hcan)
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1712              		.loc 1 1110 0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 0
 1715              		@ frame_needed = 0, uses_anonymous_args = 0
 1716              	.LVL97:
 1717 0000 38B5     		push	{r3, r4, r5, lr}
 1718              	.LCFI24:
 1719              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccwnAXFK.s 			page 55


 1720              		.cfi_offset 3, -16
 1721              		.cfi_offset 4, -12
 1722              		.cfi_offset 5, -8
 1723              		.cfi_offset 14, -4
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process locked */
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_LOCK(hcan);
 1724              		.loc 1 1114 0
 1725 0002 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1726 0006 012B     		cmp	r3, #1
 1727 0008 17D0     		beq	.L225
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY; 
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Request Sleep mode */
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   MODIFY_REG(hcan->Instance->MCR,
 1728              		.loc 1 1120 0 discriminator 2
 1729 000a 0268     		ldr	r2, [r0]
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 1730              		.loc 1 1117 0 discriminator 2
 1731 000c 0223     		movs	r3, #2
 1732 000e 80F83C30 		strb	r3, [r0, #60]
 1733              		.loc 1 1120 0 discriminator 2
 1734 0012 1368     		ldr	r3, [r2]
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1735              		.loc 1 1114 0 discriminator 2
 1736 0014 0121     		movs	r1, #1
 1737              		.loc 1 1120 0 discriminator 2
 1738 0016 23F00303 		bic	r3, r3, #3
 1739 001a 43F00203 		orr	r3, r3, #2
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1740              		.loc 1 1114 0 discriminator 2
 1741 001e 80F83D10 		strb	r1, [r0, #61]
 1742              		.loc 1 1120 0 discriminator 2
 1743 0022 1360     		str	r3, [r2]
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_MCR_INRQ       ,
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_MCR_SLEEP       );
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Sleep mode status */
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_SLAK) ||
 1744              		.loc 1 1125 0 discriminator 2
 1745 0024 5368     		ldr	r3, [r2, #4]
 1746 0026 9C07     		lsls	r4, r3, #30
 1747 0028 02D5     		bpl	.L221
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 1748              		.loc 1 1126 0 discriminator 1
 1749 002a 5368     		ldr	r3, [r2, #4]
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 1750              		.loc 1 1125 0 discriminator 1
 1751 002c D907     		lsls	r1, r3, #31
 1752 002e 06D5     		bpl	.L222
 1753              	.L221:
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process unlocked */
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_UNLOCK(hcan);
ARM GAS  /tmp/ccwnAXFK.s 			page 56


 1754              		.loc 1 1129 0
 1755 0030 0023     		movs	r3, #0
 1756 0032 80F83D30 		strb	r3, [r0, #61]
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 1757              		.loc 1 1132 0
 1758 0036 0120     		movs	r0, #1
 1759              	.LVL98:
 1760 0038 38BD     		pop	{r3, r4, r5, pc}
 1761              	.LVL99:
 1762              	.L225:
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1763              		.loc 1 1114 0
 1764 003a 0220     		movs	r0, #2
 1765              	.LVL100:
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get tick */
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Wait the acknowledge */
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while (HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_SLAK) ||
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_TIMEOUT;
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_UNLOCK(hcan);
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process unlocked */
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_UNLOCK(hcan);
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1766              		.loc 1 1161 0
 1767 003c 38BD     		pop	{r3, r4, r5, pc}
 1768              	.LVL101:
 1769              	.L222:
 1770 003e 0446     		mov	r4, r0
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1771              		.loc 1 1136 0
 1772 0040 FFF7FEFF 		bl	HAL_GetTick
 1773              	.LVL102:
 1774 0044 0546     		mov	r5, r0
 1775              	.LVL103:
 1776              	.L223:
ARM GAS  /tmp/ccwnAXFK.s 			page 57


1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 1777              		.loc 1 1139 0
 1778 0046 2368     		ldr	r3, [r4]
 1779 0048 5A68     		ldr	r2, [r3, #4]
 1780 004a 9207     		lsls	r2, r2, #30
 1781 004c 03D5     		bpl	.L224
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1782              		.loc 1 1140 0 discriminator 1
 1783 004e 5B68     		ldr	r3, [r3, #4]
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 1784              		.loc 1 1139 0 discriminator 1
 1785 0050 13F00103 		ands	r3, r3, #1
 1786 0054 0BD0     		beq	.L234
 1787              	.L224:
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1788              		.loc 1 1142 0
 1789 0056 FFF7FEFF 		bl	HAL_GetTick
 1790              	.LVL104:
 1791 005a 401B     		subs	r0, r0, r5
 1792 005c 0A28     		cmp	r0, #10
 1793 005e F2D9     		bls	.L223
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1794              		.loc 1 1144 0
 1795 0060 0320     		movs	r0, #3
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1796              		.loc 1 1147 0
 1797 0062 0023     		movs	r3, #0
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1798              		.loc 1 1144 0
 1799 0064 84F83C00 		strb	r0, [r4, #60]
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1800              		.loc 1 1147 0
 1801 0068 84F83D30 		strb	r3, [r4, #61]
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1802              		.loc 1 1149 0
 1803 006c 38BD     		pop	{r3, r4, r5, pc}
 1804              	.LVL105:
 1805              	.L234:
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1806              		.loc 1 1154 0
 1807 006e 0122     		movs	r2, #1
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1808              		.loc 1 1157 0
 1809 0070 84F83D30 		strb	r3, [r4, #61]
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1810              		.loc 1 1160 0
 1811 0074 1846     		mov	r0, r3
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1812              		.loc 1 1154 0
 1813 0076 84F83C20 		strb	r2, [r4, #60]
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1814              		.loc 1 1160 0
 1815 007a 38BD     		pop	{r3, r4, r5, pc}
 1816              		.cfi_endproc
 1817              	.LFE72:
 1819              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 1820              		.align	2
ARM GAS  /tmp/ccwnAXFK.s 			page 58


 1821              		.global	HAL_CAN_WakeUp
 1822              		.thumb
 1823              		.thumb_func
 1825              	HAL_CAN_WakeUp:
 1826              	.LFB73:
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode, after that the CAN peripheral
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         is in the normal mode.
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status.
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef* hcan)
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1827              		.loc 1 1171 0
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 0
 1830              		@ frame_needed = 0, uses_anonymous_args = 0
 1831              	.LVL106:
 1832 0000 38B5     		push	{r3, r4, r5, lr}
 1833              	.LCFI25:
 1834              		.cfi_def_cfa_offset 16
 1835              		.cfi_offset 3, -16
 1836              		.cfi_offset 4, -12
 1837              		.cfi_offset 5, -8
 1838              		.cfi_offset 14, -4
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process locked */
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_LOCK(hcan);
 1839              		.loc 1 1175 0
 1840 0002 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1841 0006 012B     		cmp	r3, #1
 1842 0008 01D1     		bne	.L243
 1843 000a 0220     		movs	r0, #2
 1844              	.LVL107:
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;  
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Wake up request */
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get timeout */
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();   
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Sleep mode status */
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while((hcan->Instance->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State= HAL_CAN_STATE_TIMEOUT;
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_UNLOCK(hcan);
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /tmp/ccwnAXFK.s 			page 59


1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_SLAK))
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process unlocked */
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_UNLOCK(hcan);
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY; 
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process unlocked */
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_UNLOCK(hcan);
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1845              		.loc 1 1214 0
 1846 000c 38BD     		pop	{r3, r4, r5, pc}
 1847              	.LVL108:
 1848              	.L243:
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 1849              		.loc 1 1181 0 discriminator 2
 1850 000e 0268     		ldr	r2, [r0]
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  
 1851              		.loc 1 1178 0 discriminator 2
 1852 0010 0223     		movs	r3, #2
 1853 0012 80F83C30 		strb	r3, [r0, #60]
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 1854              		.loc 1 1181 0 discriminator 2
 1855 0016 1368     		ldr	r3, [r2]
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1856              		.loc 1 1175 0 discriminator 2
 1857 0018 0121     		movs	r1, #1
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 1858              		.loc 1 1181 0 discriminator 2
 1859 001a 23F00203 		bic	r3, r3, #2
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1860              		.loc 1 1175 0 discriminator 2
 1861 001e 80F83D10 		strb	r1, [r0, #61]
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 1862              		.loc 1 1181 0 discriminator 2
 1863 0022 1360     		str	r3, [r2]
 1864 0024 0446     		mov	r4, r0
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1865              		.loc 1 1184 0 discriminator 2
 1866 0026 FFF7FEFF 		bl	HAL_GetTick
 1867              	.LVL109:
 1868 002a 0546     		mov	r5, r0
 1869              	.LVL110:
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1870              		.loc 1 1187 0 discriminator 2
 1871 002c 04E0     		b	.L237
 1872              	.LVL111:
 1873              	.L238:
ARM GAS  /tmp/ccwnAXFK.s 			page 60


1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1874              		.loc 1 1189 0
 1875 002e FFF7FEFF 		bl	HAL_GetTick
 1876              	.LVL112:
 1877 0032 401B     		subs	r0, r0, r5
 1878 0034 0A28     		cmp	r0, #10
 1879 0036 0ED8     		bhi	.L244
 1880              	.L237:
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1881              		.loc 1 1187 0
 1882 0038 2268     		ldr	r2, [r4]
 1883 003a 5368     		ldr	r3, [r2, #4]
 1884 003c 13F00203 		ands	r3, r3, #2
 1885 0040 F5D1     		bne	.L238
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1886              		.loc 1 1197 0
 1887 0042 5068     		ldr	r0, [r2, #4]
 1888 0044 10F00200 		ands	r0, r0, #2
 1889 0048 0CD1     		bne	.L245
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1890              		.loc 1 1207 0
 1891 004a 0123     		movs	r3, #1
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1892              		.loc 1 1210 0
 1893 004c 84F83D00 		strb	r0, [r4, #61]
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1894              		.loc 1 1207 0
 1895 0050 84F83C30 		strb	r3, [r4, #60]
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1896              		.loc 1 1213 0
 1897 0054 38BD     		pop	{r3, r4, r5, pc}
 1898              	.LVL113:
 1899              	.L244:
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
 1900              		.loc 1 1191 0
 1901 0056 0320     		movs	r0, #3
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
 1902              		.loc 1 1193 0
 1903 0058 0023     		movs	r3, #0
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
 1904              		.loc 1 1191 0
 1905 005a 84F83C00 		strb	r0, [r4, #60]
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
 1906              		.loc 1 1193 0
 1907 005e 84F83D30 		strb	r3, [r4, #61]
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1908              		.loc 1 1194 0
 1909 0062 38BD     		pop	{r3, r4, r5, pc}
 1910              	.LVL114:
 1911              	.L245:
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1912              		.loc 1 1200 0
 1913 0064 84F83D30 		strb	r3, [r4, #61]
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1914              		.loc 1 1203 0
 1915 0068 0120     		movs	r0, #1
 1916 006a 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccwnAXFK.s 			page 61


 1917              		.cfi_endproc
 1918              	.LFE73:
 1920              		.section	.text.HAL_CAN_TxCpltCallback,"ax",%progbits
 1921              		.align	2
 1922              		.weak	HAL_CAN_TxCpltCallback
 1923              		.thumb
 1924              		.thumb_func
 1926              	HAL_CAN_TxCpltCallback:
 1927              	.LFB75:
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Handles CAN interrupt request  
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef* hcan)
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp1 = 0U, tmp2 = 0U, tmp3 = 0U;
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Overrun flag for FIFO0 */
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_FOV0);
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV0);
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to FOV0 error */
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     errorcode |= HAL_CAN_ERROR_FOV0;
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear FIFO0 Overrun Flag */
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Overrun flag for FIFO1 */
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_FOV1);
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV1);
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to FOV1 error */
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     errorcode |= HAL_CAN_ERROR_FOV1;
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear FIFO1 Overrun Flag */
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of transmission flag */
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_TME))
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Transmit request completion status */
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp1 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_0);
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp2 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_1);
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp3 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_2);
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(tmp1 || tmp2 || tmp3)  
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK0);
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp2 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK1);
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp3 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK2);
ARM GAS  /tmp/ccwnAXFK.s 			page 62


1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Transmit success */
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if((tmp1) || (tmp2) || (tmp3))
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call transmit function */
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         CAN_Transmit_IT(hcan);
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       else /* Transmit failure */
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Set CAN error code to TXFAIL error */
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_TXFAIL;
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear transmission status flags (RQCPx and TXOKx) */
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_RQCP0  | CAN_TSR_RQCP1  | CAN_TSR_RQCP2 | \
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    CAN_FLAG_TXOK0 | CAN_FLAG_TXOK1 | CAN_FLAG_TXOK2);
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_MSG_PENDING(hcan, CAN_FIFO0);
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP0);
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of reception flag for FIFO0 */
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call receive function */
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CAN_Receive_IT(hcan, CAN_FIFO0);
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_MSG_PENDING(hcan, CAN_FIFO1);
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP1);
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of reception flag for FIFO1 */
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call receive function */
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CAN_Receive_IT(hcan, CAN_FIFO1);
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set error code in handle */
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->ErrorCode |= errorcode;
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_EWG);
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EWG);
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Error Warning Flag */
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(tmp1 && tmp2 && tmp3)
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to EWG error */
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_EWG;
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Error Warning Flag as read-only */
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_EPV);
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EPV);
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR); 
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Error Passive Flag */
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(tmp1 && tmp2 && tmp3)
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to EPV error */
ARM GAS  /tmp/ccwnAXFK.s 			page 63


1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_EPV;
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Error Passive Flag as read-only */ 
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_BOF);
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_BOF);
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);  
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Bus-Off Flag */
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(tmp1 && tmp2 && tmp3)
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to BOF error */
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_BOF;
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Bus-Off Flag as read-only */
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = HAL_IS_BIT_CLR(hcan->Instance->ESR, CAN_ESR_LEC);
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_LEC);
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Last error code Flag */
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((!tmp1) && tmp2 && tmp3)
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp1 = (hcan->Instance->ESR & CAN_ESR_LEC);
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(tmp1)
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_0):
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to STF error */
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_STF;
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_1):
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to FOR error */
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_FOR;
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to ACK error */
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_ACK;
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2):
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to BR error */
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_BR;
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to BD error */
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_BD;
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to CRC error */
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_CRC;
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default:
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear Last error code Flag */ 
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
ARM GAS  /tmp/ccwnAXFK.s 			page 64


1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan->ErrorCode != HAL_CAN_ERROR_NONE)
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear ERRI Flag */ 
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->MSR = CAN_MSR_ERRI; 
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the CAN state ready to be able to start again the process */
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable interrupts: */
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error Interrupt */
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable FIFO 0 message pending Interrupt */
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable FIFO 0 Overrun Interrupt */
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable FIFO 1 message pending Interrupt */
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable FIFO 1 Overrun Interrupt */
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Transmit mailbox empty Interrupt */
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_BOF |
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_LEC |
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_ERR |
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_FMP0|
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_FOV0|
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_FMP1|
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_FOV1|
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_TME  );
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call Error callback function */
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }  
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission  complete callback in non blocking mode 
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxCpltCallback(CAN_HandleTypeDef* hcan)
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1928              		.loc 1 1418 0
 1929              		.cfi_startproc
 1930              		@ args = 0, pretend = 0, frame = 0
 1931              		@ frame_needed = 0, uses_anonymous_args = 0
 1932              		@ link register save eliminated.
 1933              	.LVL115:
 1934 0000 7047     		bx	lr
 1935              		.cfi_endproc
 1936              	.LFE75:
 1938 0002 00BF     		.section	.text.HAL_CAN_RxCpltCallback,"ax",%progbits
 1939              		.align	2
 1940              		.weak	HAL_CAN_RxCpltCallback
 1941              		.thumb
 1942              		.thumb_func
 1944              	HAL_CAN_RxCpltCallback:
ARM GAS  /tmp/ccwnAXFK.s 			page 65


 1945              	.LFB76:
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxCpltCallback can be implemented in the user file
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission  complete callback in non blocking mode 
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_RxCpltCallback(CAN_HandleTypeDef* hcan)
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1946              		.loc 1 1433 0
 1947              		.cfi_startproc
 1948              		@ args = 0, pretend = 0, frame = 0
 1949              		@ frame_needed = 0, uses_anonymous_args = 0
 1950              		@ link register save eliminated.
 1951              	.LVL116:
 1952 0000 7047     		bx	lr
 1953              		.cfi_endproc
 1954              	.LFE76:
 1956 0002 00BF     		.section	.text.CAN_Receive_IT,"ax",%progbits
 1957              		.align	2
 1958              		.thumb
 1959              		.thumb_func
 1961              	CAN_Receive_IT:
 1962              	.LFB81:
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_RxCpltCallback can be implemented in the user file
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Error CAN callback.
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_ErrorCallback can be implemented in the user file
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccwnAXFK.s 			page 66


1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Peripheral State and Error functions
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *  @brief   CAN Peripheral State functions 
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim   
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             ##### Peripheral State and Error functions #####
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     This subsection provides functions allowing to :
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Check the CAN state.
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Check CAN Errors detected during interrupt process
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  return the CAN state
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL state
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(CAN_HandleTypeDef* hcan)
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return CAN state */
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return hcan->State;
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Return the CAN error code
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval CAN Error Code
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_GetError(CAN_HandleTypeDef *hcan)
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return hcan->ErrorCode;
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @addtogroup CAN_Private_Functions
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** static HAL_StatusTypeDef CAN_Transmit_IT(CAN_HandleTypeDef* hcan)
ARM GAS  /tmp/ccwnAXFK.s 			page 67


1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Disable Transmit mailbox empty Interrupt */
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_CAN_DISABLE_IT(hcan, CAN_IT_TME);
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan->State == HAL_CAN_STATE_BUSY_TX)
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {   
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable interrupts: */
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error Interrupt */
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_BOF |
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_LEC |
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_ERR);
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   switch(hcan->State)
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX0):
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX0;
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX1):
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX1;
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     default: /* HAL_CAN_STATE_BUSY_TX */
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_READY;
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Transmission complete callback */ 
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_TxCpltCallback(hcan);
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan:       Pointer to a CAN_HandleTypeDef structure that contains
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  FIFONumber: Specify the FIFO number    
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** static HAL_StatusTypeDef CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber)
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1963              		.loc 1 1568 0
 1964              		.cfi_startproc
 1965              		@ args = 0, pretend = 0, frame = 0
 1966              		@ frame_needed = 0, uses_anonymous_args = 0
 1967              	.LVL117:
ARM GAS  /tmp/ccwnAXFK.s 			page 68


1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp1 = 0U;
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CanRxMsgTypeDef* pRxMsg = NULL;
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set RxMsg pointer */
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg = hcan->pRxMsg;
 1968              		.loc 1 1575 0
 1969 0000 426B     		ldr	r2, [r0, #52]
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg = hcan->pRx1Msg;
 1970              		.loc 1 1579 0
 1971 0002 836B     		ldr	r3, [r0, #56]
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp1 = 0U;
 1972              		.loc 1 1568 0
 1973 0004 70B5     		push	{r4, r5, r6, lr}
 1974              	.LCFI26:
 1975              		.cfi_def_cfa_offset 16
 1976              		.cfi_offset 4, -16
 1977              		.cfi_offset 5, -12
 1978              		.cfi_offset 6, -8
 1979              		.cfi_offset 14, -4
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1980              		.loc 1 1575 0
 1981 0006 0029     		cmp	r1, #0
 1982 0008 08BF     		it	eq
 1983 000a 1346     		moveq	r3, r2
 1984              	.LVL118:
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the Id */
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->IDE = (uint8_t)0x04U & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 1985              		.loc 1 1583 0
 1986 000c 0568     		ldr	r5, [r0]
 1987 000e 0A01     		lsls	r2, r1, #4
 1988 0010 AC18     		adds	r4, r5, r2
 1989 0012 D4F8B061 		ldr	r6, [r4, #432]
 1990 0016 06F00406 		and	r6, r6, #4
 1991 001a 9E60     		str	r6, [r3, #8]
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (pRxMsg->IDE == CAN_ID_STD)
 1992              		.loc 1 1584 0
 1993 001c 002E     		cmp	r6, #0
 1994 001e 7DD1     		bne	.L250
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg->StdId = 0x000007FFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RIR >> 21U);
 1995              		.loc 1 1586 0
 1996 0020 D4F8B061 		ldr	r6, [r4, #432]
 1997 0024 760D     		lsrs	r6, r6, #21
 1998 0026 1E60     		str	r6, [r3]
 1999              	.L251:
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg->ExtId = 0x1FFFFFFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RIR >> 3U);
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
ARM GAS  /tmp/ccwnAXFK.s 			page 69


1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->RTR = (uint8_t)0x02U & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 2000              		.loc 1 1593 0
 2001 0028 D4F8B061 		ldr	r6, [r4, #432]
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the DLC */
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->DLC = (uint8_t)0x0FU & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR;
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FIFONumber */
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->FIFONumber = FIFONumber;
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FMI */
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->FMI = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDTR >> 8U);
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the data field */
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[0] = (uint8_t)0xFFU & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR;
 2002              		.loc 1 1601 0
 2003 002c 1544     		add	r5, r5, r2
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the DLC */
 2004              		.loc 1 1593 0
 2005 002e 06F00206 		and	r6, r6, #2
 2006 0032 DE60     		str	r6, [r3, #12]
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FIFONumber */
 2007              		.loc 1 1595 0
 2008 0034 D4F8B461 		ldr	r6, [r4, #436]
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FMI */
 2009              		.loc 1 1597 0
 2010 0038 1962     		str	r1, [r3, #32]
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FIFONumber */
 2011              		.loc 1 1595 0
 2012 003a 06F00F06 		and	r6, r6, #15
 2013 003e 1E61     		str	r6, [r3, #16]
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the data field */
 2014              		.loc 1 1599 0
 2015 0040 D4F8B441 		ldr	r4, [r4, #436]
 2016              		.loc 1 1601 0
 2017 0044 D5F8B861 		ldr	r6, [r5, #440]
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the data field */
 2018              		.loc 1 1599 0
 2019 0048 C4F30725 		ubfx	r5, r4, #8, #8
 2020              		.loc 1 1601 0
 2021 004c 1E75     		strb	r6, [r3, #20]
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[1] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 8U);
 2022              		.loc 1 1602 0
 2023 004e 0468     		ldr	r4, [r0]
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the data field */
 2024              		.loc 1 1599 0
 2025 0050 DD61     		str	r5, [r3, #28]
 2026              		.loc 1 1602 0
 2027 0052 1444     		add	r4, r4, r2
 2028 0054 D4F8B841 		ldr	r4, [r4, #440]
 2029 0058 240A     		lsrs	r4, r4, #8
 2030 005a 5C75     		strb	r4, [r3, #21]
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[2] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 16U);
 2031              		.loc 1 1603 0
 2032 005c 0468     		ldr	r4, [r0]
 2033 005e 1444     		add	r4, r4, r2
 2034 0060 D4F8B841 		ldr	r4, [r4, #440]
 2035 0064 240C     		lsrs	r4, r4, #16
 2036 0066 9C75     		strb	r4, [r3, #22]
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[3] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 24U);
ARM GAS  /tmp/ccwnAXFK.s 			page 70


 2037              		.loc 1 1604 0
 2038 0068 0468     		ldr	r4, [r0]
 2039 006a 1444     		add	r4, r4, r2
 2040 006c D4F8B841 		ldr	r4, [r4, #440]
 2041 0070 240E     		lsrs	r4, r4, #24
 2042 0072 DC75     		strb	r4, [r3, #23]
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[4] = (uint8_t)0xFFU & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR;
 2043              		.loc 1 1605 0
 2044 0074 0468     		ldr	r4, [r0]
 2045 0076 1444     		add	r4, r4, r2
 2046 0078 04F5DC74 		add	r4, r4, #440
 2047 007c 6468     		ldr	r4, [r4, #4]
 2048 007e 1C76     		strb	r4, [r3, #24]
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[5] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 8U);
 2049              		.loc 1 1606 0
 2050 0080 0468     		ldr	r4, [r0]
 2051 0082 1444     		add	r4, r4, r2
 2052 0084 04F5DC74 		add	r4, r4, #440
 2053 0088 6468     		ldr	r4, [r4, #4]
 2054 008a 240A     		lsrs	r4, r4, #8
 2055 008c 5C76     		strb	r4, [r3, #25]
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[6] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 16U);
 2056              		.loc 1 1607 0
 2057 008e 0468     		ldr	r4, [r0]
 2058 0090 1444     		add	r4, r4, r2
 2059 0092 04F5DC74 		add	r4, r4, #440
 2060 0096 6468     		ldr	r4, [r4, #4]
 2061 0098 240C     		lsrs	r4, r4, #16
 2062 009a 9C76     		strb	r4, [r3, #26]
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[7] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 24U);
 2063              		.loc 1 1608 0
 2064 009c 0468     		ldr	r4, [r0]
 2065 009e 2244     		add	r2, r2, r4
 2066 00a0 02F5DC72 		add	r2, r2, #440
 2067 00a4 5268     		ldr	r2, [r2, #4]
 2068 00a6 120E     		lsrs	r2, r2, #24
 2069 00a8 DA76     		strb	r2, [r3, #27]
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release the FIFO */
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release FIFO0 */
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO0);
 2070              		.loc 1 1613 0
 2071 00aa 0368     		ldr	r3, [r0]
 2072              	.LVL119:
 2073 00ac 2022     		movs	r2, #32
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2074              		.loc 1 1611 0
 2075 00ae D1B9     		cbnz	r1, .L252
 2076              		.loc 1 1613 0
 2077 00b0 DA60     		str	r2, [r3, #12]
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable FIFO 0 overrun and message pending Interrupt */
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_FOV0 | CAN_IT_FMP0);
 2078              		.loc 1 1616 0
 2079 00b2 5A69     		ldr	r2, [r3, #20]
 2080 00b4 22F00A02 		bic	r2, r2, #10
ARM GAS  /tmp/ccwnAXFK.s 			page 71


 2081 00b8 5A61     		str	r2, [r3, #20]
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release FIFO1 */
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO1);
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable FIFO 1 overrun and message pending Interrupt */
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_FOV1 | CAN_IT_FMP1);
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = hcan->State;
 2082              		.loc 1 1627 0
 2083 00ba 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 2084              	.LVL120:
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 == HAL_CAN_STATE_BUSY_RX0) || (tmp1 == HAL_CAN_STATE_BUSY_RX1))
 2085              		.loc 1 1628 0
 2086 00be 02F0EF02 		and	r2, r2, #239
 2087              	.LVL121:
 2088 00c2 222A     		cmp	r2, #34
 2089 00c4 39D0     		beq	.L273
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable interrupts: */
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error Interrupt */
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_BOF |
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_LEC |
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_ERR);
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 2090              		.loc 1 1646 0
 2091 00c6 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2092 00ca DBB2     		uxtb	r3, r3
 2093 00cc 622B     		cmp	r3, #98
 2094 00ce 3DD0     		beq	.L258
 2095              	.L276:
 2096 00d0 722B     		cmp	r3, #114
 2097 00d2 49D0     		beq	.L259
 2098 00d4 422B     		cmp	r3, #66
 2099 00d6 1AD0     		beq	.L270
 2100              	.L267:
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
ARM GAS  /tmp/ccwnAXFK.s 			page 72


1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 2101              		.loc 1 1676 0
 2102 00d8 0123     		movs	r3, #1
 2103 00da 80F83C30 		strb	r3, [r0, #60]
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive complete callback */ 
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_RxCpltCallback(hcan);
 2104              		.loc 1 1682 0
 2105 00de FFF7FEFF 		bl	HAL_CAN_RxCpltCallback
 2106              	.LVL122:
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2107              		.loc 1 1686 0
 2108 00e2 0020     		movs	r0, #0
 2109 00e4 70BD     		pop	{r4, r5, r6, pc}
 2110              	.LVL123:
 2111              	.L252:
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 2112              		.loc 1 1621 0
 2113 00e6 1A61     		str	r2, [r3, #16]
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2114              		.loc 1 1624 0
 2115 00e8 5A69     		ldr	r2, [r3, #20]
 2116 00ea 22F05002 		bic	r2, r2, #80
 2117 00ee 5A61     		str	r2, [r3, #20]
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 == HAL_CAN_STATE_BUSY_RX0) || (tmp1 == HAL_CAN_STATE_BUSY_RX1))
 2118              		.loc 1 1627 0
 2119 00f0 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 2120              	.LVL124:
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccwnAXFK.s 			page 73


 2121              		.loc 1 1628 0
 2122 00f4 02F0EF02 		and	r2, r2, #239
 2123              	.LVL125:
 2124 00f8 222A     		cmp	r2, #34
 2125 00fa 14D0     		beq	.L274
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2126              		.loc 1 1664 0
 2127 00fc 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2128 0100 DBB2     		uxtb	r3, r3
 2129 0102 622B     		cmp	r3, #98
 2130 0104 29D0     		beq	.L263
 2131              	.L275:
 2132 0106 722B     		cmp	r3, #114
 2133 0108 35D0     		beq	.L264
 2134 010a 522B     		cmp	r3, #82
 2135 010c E4D1     		bne	.L267
 2136              	.L270:
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2137              		.loc 1 1667 0
 2138 010e 1223     		movs	r3, #18
 2139 0110 80F83C30 		strb	r3, [r0, #60]
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2140              		.loc 1 1682 0
 2141 0114 FFF7FEFF 		bl	HAL_CAN_RxCpltCallback
 2142              	.LVL126:
 2143              		.loc 1 1686 0
 2144 0118 0020     		movs	r0, #0
 2145 011a 70BD     		pop	{r4, r5, r6, pc}
 2146              	.LVL127:
 2147              	.L250:
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2148              		.loc 1 1590 0
 2149 011c D4F8B061 		ldr	r6, [r4, #432]
 2150 0120 F608     		lsrs	r6, r6, #3
 2151 0122 5E60     		str	r6, [r3, #4]
 2152 0124 80E7     		b	.L251
 2153              	.LVL128:
 2154              	.L274:
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
 2155              		.loc 1 1636 0
 2156 0126 5A69     		ldr	r2, [r3, #20]
 2157 0128 22F40F42 		bic	r2, r2, #36608
 2158 012c 5A61     		str	r2, [r3, #20]
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2159              		.loc 1 1664 0
 2160 012e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2161 0132 DBB2     		uxtb	r3, r3
 2162 0134 622B     		cmp	r3, #98
 2163 0136 E6D1     		bne	.L275
 2164 0138 0FE0     		b	.L263
 2165              	.L273:
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
 2166              		.loc 1 1636 0
 2167 013a 5A69     		ldr	r2, [r3, #20]
 2168 013c 22F40F42 		bic	r2, r2, #36608
 2169 0140 5A61     		str	r2, [r3, #20]
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
ARM GAS  /tmp/ccwnAXFK.s 			page 74


 2170              		.loc 1 1646 0
 2171 0142 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2172 0146 DBB2     		uxtb	r3, r3
 2173 0148 622B     		cmp	r3, #98
 2174 014a C1D1     		bne	.L276
 2175              	.L258:
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2176              		.loc 1 1652 0
 2177 014c 3223     		movs	r3, #50
 2178 014e 80F83C30 		strb	r3, [r0, #60]
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2179              		.loc 1 1682 0
 2180 0152 FFF7FEFF 		bl	HAL_CAN_RxCpltCallback
 2181              	.LVL129:
 2182              		.loc 1 1686 0
 2183 0156 0020     		movs	r0, #0
 2184 0158 70BD     		pop	{r4, r5, r6, pc}
 2185              	.LVL130:
 2186              	.L263:
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2187              		.loc 1 1670 0
 2188 015a 2223     		movs	r3, #34
 2189 015c 80F83C30 		strb	r3, [r0, #60]
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2190              		.loc 1 1682 0
 2191 0160 FFF7FEFF 		bl	HAL_CAN_RxCpltCallback
 2192              	.LVL131:
 2193              		.loc 1 1686 0
 2194 0164 0020     		movs	r0, #0
 2195 0166 70BD     		pop	{r4, r5, r6, pc}
 2196              	.LVL132:
 2197              	.L259:
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2198              		.loc 1 1655 0
 2199 0168 5223     		movs	r3, #82
 2200 016a 80F83C30 		strb	r3, [r0, #60]
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2201              		.loc 1 1682 0
 2202 016e FFF7FEFF 		bl	HAL_CAN_RxCpltCallback
 2203              	.LVL133:
 2204              		.loc 1 1686 0
 2205 0172 0020     		movs	r0, #0
 2206 0174 70BD     		pop	{r4, r5, r6, pc}
 2207              	.LVL134:
 2208              	.L264:
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2209              		.loc 1 1673 0
 2210 0176 4223     		movs	r3, #66
 2211 0178 80F83C30 		strb	r3, [r0, #60]
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2212              		.loc 1 1682 0
 2213 017c FFF7FEFF 		bl	HAL_CAN_RxCpltCallback
 2214              	.LVL135:
 2215              		.loc 1 1686 0
 2216 0180 0020     		movs	r0, #0
 2217 0182 70BD     		pop	{r4, r5, r6, pc}
 2218              		.cfi_endproc
ARM GAS  /tmp/ccwnAXFK.s 			page 75


 2219              	.LFE81:
 2221              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 2222              		.align	2
 2223              		.weak	HAL_CAN_ErrorCallback
 2224              		.thumb
 2225              		.thumb_func
 2227              	HAL_CAN_ErrorCallback:
 2228              	.LFB77:
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 2229              		.loc 1 1448 0
 2230              		.cfi_startproc
 2231              		@ args = 0, pretend = 0, frame = 0
 2232              		@ frame_needed = 0, uses_anonymous_args = 0
 2233              		@ link register save eliminated.
 2234              	.LVL136:
 2235 0000 7047     		bx	lr
 2236              		.cfi_endproc
 2237              	.LFE77:
 2239 0002 00BF     		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2240              		.align	2
 2241              		.global	HAL_CAN_IRQHandler
 2242              		.thumb
 2243              		.thumb_func
 2245              	HAL_CAN_IRQHandler:
 2246              	.LFB74:
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp1 = 0U, tmp2 = 0U, tmp3 = 0U;
 2247              		.loc 1 1223 0
 2248              		.cfi_startproc
 2249              		@ args = 0, pretend = 0, frame = 0
 2250              		@ frame_needed = 0, uses_anonymous_args = 0
 2251              	.LVL137:
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV0);
 2252              		.loc 1 1228 0
 2253 0000 0368     		ldr	r3, [r0]
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp1 = 0U, tmp2 = 0U, tmp3 = 0U;
 2254              		.loc 1 1223 0
 2255 0002 70B5     		push	{r4, r5, r6, lr}
 2256              	.LCFI27:
 2257              		.cfi_def_cfa_offset 16
 2258              		.cfi_offset 4, -16
 2259              		.cfi_offset 5, -12
 2260              		.cfi_offset 6, -8
 2261              		.cfi_offset 14, -4
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV0);
 2262              		.loc 1 1228 0
 2263 0004 DA68     		ldr	r2, [r3, #12]
 2264              	.LVL138:
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp1 = 0U, tmp2 = 0U, tmp3 = 0U;
 2265              		.loc 1 1223 0
 2266 0006 0446     		mov	r4, r0
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2267              		.loc 1 1230 0
 2268 0008 12F01005 		ands	r5, r2, #16
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
 2269              		.loc 1 1229 0
 2270 000c 5969     		ldr	r1, [r3, #20]
 2271              	.LVL139:
ARM GAS  /tmp/ccwnAXFK.s 			page 76


1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2272              		.loc 1 1230 0
 2273 000e 02D0     		beq	.L279
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2274              		.loc 1 1230 0 is_stmt 0 discriminator 1
 2275 0010 11F00805 		ands	r5, r1, #8
 2276              	.LVL140:
 2277 0014 7DD1     		bne	.L372
 2278              	.LVL141:
 2279              	.L279:
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV1);
 2280              		.loc 1 1240 0 is_stmt 1
 2281 0016 1A69     		ldr	r2, [r3, #16]
 2282              	.LVL142:
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
 2283              		.loc 1 1241 0
 2284 0018 5969     		ldr	r1, [r3, #20]
 2285              	.LVL143:
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2286              		.loc 1 1242 0
 2287 001a D006     		lsls	r0, r2, #27
 2288              	.LVL144:
 2289 001c 01D5     		bpl	.L280
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2290              		.loc 1 1242 0 is_stmt 0 discriminator 1
 2291 001e 4906     		lsls	r1, r1, #25
 2292              	.LVL145:
 2293 0020 72D4     		bmi	.L373
 2294              	.LVL146:
 2295              	.L280:
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2296              		.loc 1 1252 0 is_stmt 1
 2297 0022 5A69     		ldr	r2, [r3, #20]
 2298 0024 D207     		lsls	r2, r2, #31
 2299 0026 11D5     		bpl	.L281
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp2 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_1);
 2300              		.loc 1 1255 0
 2301 0028 754A     		ldr	r2, .L383
 2302 002a 9868     		ldr	r0, [r3, #8]
 2303              	.LVL147:
 2304 002c 1146     		mov	r1, r2
 2305 002e 0240     		ands	r2, r2, r0
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2306              		.loc 1 1258 0
 2307 0030 8A42     		cmp	r2, r1
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp3 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_2);
 2308              		.loc 1 1256 0
 2309 0032 9868     		ldr	r0, [r3, #8]
 2310              	.LVL148:
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(tmp1 || tmp2 || tmp3)  
 2311              		.loc 1 1257 0
 2312 0034 9E68     		ldr	r6, [r3, #8]
 2313              	.LVL149:
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2314              		.loc 1 1258 0
 2315 0036 7FD0     		beq	.L282
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp3 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_2);
ARM GAS  /tmp/ccwnAXFK.s 			page 77


 2316              		.loc 1 1256 0 discriminator 1
 2317 0038 724A     		ldr	r2, .L383+4
 2318 003a 1146     		mov	r1, r2
 2319 003c 0240     		ands	r2, r2, r0
 2320              	.LVL150:
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2321              		.loc 1 1258 0 discriminator 1
 2322 003e 8A42     		cmp	r2, r1
 2323 0040 7AD0     		beq	.L282
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(tmp1 || tmp2 || tmp3)  
 2324              		.loc 1 1257 0 discriminator 2
 2325 0042 714A     		ldr	r2, .L383+8
 2326              	.LVL151:
 2327 0044 1146     		mov	r1, r2
 2328 0046 3240     		ands	r2, r2, r6
 2329              	.LVL152:
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2330              		.loc 1 1258 0 discriminator 2
 2331 0048 8A42     		cmp	r2, r1
 2332 004a 75D0     		beq	.L282
 2333              	.LVL153:
 2334              	.L281:
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP0);
 2335              		.loc 1 1281 0
 2336 004c DA68     		ldr	r2, [r3, #12]
 2337              	.LVL154:
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of reception flag for FIFO0 */
 2338              		.loc 1 1282 0
 2339 004e 5969     		ldr	r1, [r3, #20]
 2340              	.LVL155:
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2341              		.loc 1 1284 0
 2342 0050 9007     		lsls	r0, r2, #30
 2343 0052 02D0     		beq	.L292
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2344              		.loc 1 1284 0 is_stmt 0 discriminator 1
 2345 0054 8907     		lsls	r1, r1, #30
 2346              	.LVL156:
 2347 0056 00F19880 		bmi	.L374
 2348              	.LVL157:
 2349              	.L292:
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP1);
 2350              		.loc 1 1290 0 is_stmt 1
 2351 005a 1A69     		ldr	r2, [r3, #16]
 2352              	.LVL158:
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of reception flag for FIFO1 */
 2353              		.loc 1 1291 0
 2354 005c 5969     		ldr	r1, [r3, #20]
 2355              	.LVL159:
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2356              		.loc 1 1293 0
 2357 005e 9207     		lsls	r2, r2, #30
 2358              	.LVL160:
 2359 0060 02D0     		beq	.L293
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2360              		.loc 1 1293 0 is_stmt 0 discriminator 1
 2361 0062 CE06     		lsls	r6, r1, #27
ARM GAS  /tmp/ccwnAXFK.s 			page 78


 2362 0064 00F19780 		bmi	.L375
 2363              	.LVL161:
 2364              	.L293:
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2365              		.loc 1 1300 0 is_stmt 1
 2366 0068 226C     		ldr	r2, [r4, #64]
 2367 006a 1543     		orrs	r5, r5, r2
 2368              	.LVL162:
 2369 006c 2564     		str	r5, [r4, #64]
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EWG);
 2370              		.loc 1 1302 0
 2371 006e 9A69     		ldr	r2, [r3, #24]
 2372              	.LVL163:
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);
 2373              		.loc 1 1303 0
 2374 0070 5969     		ldr	r1, [r3, #20]
 2375              	.LVL164:
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2376              		.loc 1 1306 0
 2377 0072 D507     		lsls	r5, r2, #31
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Error Warning Flag */
 2378              		.loc 1 1304 0
 2379 0074 5869     		ldr	r0, [r3, #20]
 2380              	.LVL165:
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2381              		.loc 1 1306 0
 2382 0076 01D5     		bpl	.L294
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2383              		.loc 1 1306 0 is_stmt 0 discriminator 1
 2384 0078 CA05     		lsls	r2, r1, #23
 2385              	.LVL166:
 2386 007a 56D4     		bmi	.L376
 2387              	.L294:
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EPV);
 2388              		.loc 1 1313 0 is_stmt 1
 2389 007c 9A69     		ldr	r2, [r3, #24]
 2390              	.LVL167:
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR); 
 2391              		.loc 1 1314 0
 2392 007e 5969     		ldr	r1, [r3, #20]
 2393              	.LVL168:
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2394              		.loc 1 1317 0
 2395 0080 9507     		lsls	r5, r2, #30
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Error Passive Flag */
 2396              		.loc 1 1315 0
 2397 0082 5869     		ldr	r0, [r3, #20]
 2398              	.LVL169:
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2399              		.loc 1 1317 0
 2400 0084 01D5     		bpl	.L295
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2401              		.loc 1 1317 0 is_stmt 0 discriminator 1
 2402 0086 8905     		lsls	r1, r1, #22
 2403              	.LVL170:
 2404 0088 48D4     		bmi	.L377
 2405              	.LVL171:
ARM GAS  /tmp/ccwnAXFK.s 			page 79


 2406              	.L295:
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_BOF);
 2407              		.loc 1 1324 0 is_stmt 1
 2408 008a 9A69     		ldr	r2, [r3, #24]
 2409              	.LVL172:
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);  
 2410              		.loc 1 1325 0
 2411 008c 5969     		ldr	r1, [r3, #20]
 2412              	.LVL173:
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2413              		.loc 1 1328 0
 2414 008e 5607     		lsls	r6, r2, #29
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Bus-Off Flag */
 2415              		.loc 1 1326 0
 2416 0090 5869     		ldr	r0, [r3, #20]
 2417              	.LVL174:
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2418              		.loc 1 1328 0
 2419 0092 01D5     		bpl	.L296
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2420              		.loc 1 1328 0 is_stmt 0 discriminator 1
 2421 0094 4D05     		lsls	r5, r1, #21
 2422 0096 30D4     		bmi	.L378
 2423              	.LVL175:
 2424              	.L296:
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_LEC);
 2425              		.loc 1 1335 0 is_stmt 1
 2426 0098 9A69     		ldr	r2, [r3, #24]
 2427              	.LVL176:
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);
 2428              		.loc 1 1336 0
 2429 009a 5969     		ldr	r1, [r3, #20]
 2430              	.LVL177:
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2431              		.loc 1 1339 0
 2432 009c 12F0700F 		tst	r2, #112
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Last error code Flag */
 2433              		.loc 1 1337 0
 2434 00a0 5869     		ldr	r0, [r3, #20]
 2435              	.LVL178:
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2436              		.loc 1 1339 0
 2437 00a2 01D0     		beq	.L297
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2438              		.loc 1 1339 0 is_stmt 0 discriminator 1
 2439 00a4 0905     		lsls	r1, r1, #20
 2440              	.LVL179:
 2441 00a6 10D4     		bmi	.L379
 2442              	.LVL180:
 2443              	.L297:
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2444              		.loc 1 1377 0 is_stmt 1
 2445 00a8 226C     		ldr	r2, [r4, #64]
 2446 00aa 6AB1     		cbz	r2, .L278
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2447              		.loc 1 1382 0
 2448 00ac 0122     		movs	r2, #1
ARM GAS  /tmp/ccwnAXFK.s 			page 80


1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the CAN state ready to be able to start again the process */
 2449              		.loc 1 1380 0
 2450 00ae 0421     		movs	r1, #4
 2451 00b0 5960     		str	r1, [r3, #4]
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2452              		.loc 1 1382 0
 2453 00b2 84F83C20 		strb	r2, [r4, #60]
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
 2454              		.loc 1 1395 0
 2455 00b6 5A69     		ldr	r2, [r3, #20]
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }  
 2456              		.loc 1 1407 0
 2457 00b8 2046     		mov	r0, r4
 2458              	.LVL181:
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
 2459              		.loc 1 1395 0
 2460 00ba 22F40F42 		bic	r2, r2, #36608
 2461 00be 22F05B02 		bic	r2, r2, #91
 2462 00c2 5A61     		str	r2, [r3, #20]
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }  
 2463              		.loc 1 1407 0
 2464 00c4 FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 2465              	.LVL182:
 2466              	.L278:
 2467 00c8 70BD     		pop	{r4, r5, r6, pc}
 2468              	.LVL183:
 2469              	.L379:
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2470              		.loc 1 1339 0 discriminator 2
 2471 00ca 0204     		lsls	r2, r0, #16
 2472              	.LVL184:
 2473 00cc ECD5     		bpl	.L297
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(tmp1)
 2474              		.loc 1 1341 0
 2475 00ce 9A69     		ldr	r2, [r3, #24]
 2476              	.LVL185:
 2477 00d0 02F07002 		and	r2, r2, #112
 2478              	.LVL186:
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2479              		.loc 1 1342 0
 2480 00d4 302A     		cmp	r2, #48
 2481 00d6 00F08880 		beq	.L299
 2482 00da 78D9     		bls	.L380
 2483 00dc 502A     		cmp	r2, #80
 2484 00de 71D0     		beq	.L303
 2485 00e0 602A     		cmp	r2, #96
 2486 00e2 7DD0     		beq	.L304
 2487 00e4 402A     		cmp	r2, #64
 2488 00e6 03D1     		bne	.L298
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2489              		.loc 1 1358 0
 2490 00e8 226C     		ldr	r2, [r4, #64]
 2491              	.LVL187:
 2492 00ea 42F04002 		orr	r2, r2, #64
 2493 00ee 2264     		str	r2, [r4, #64]
 2494              	.L298:
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
ARM GAS  /tmp/ccwnAXFK.s 			page 81


 2495              		.loc 1 1373 0
 2496 00f0 9A69     		ldr	r2, [r3, #24]
 2497 00f2 22F07002 		bic	r2, r2, #112
 2498 00f6 9A61     		str	r2, [r3, #24]
 2499 00f8 D6E7     		b	.L297
 2500              	.LVL188:
 2501              	.L378:
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2502              		.loc 1 1328 0 discriminator 2
 2503 00fa 0004     		lsls	r0, r0, #16
 2504              	.LVL189:
 2505 00fc CCD5     		bpl	.L296
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Bus-Off Flag as read-only */
 2506              		.loc 1 1331 0
 2507 00fe 226C     		ldr	r2, [r4, #64]
 2508              	.LVL190:
 2509 0100 42F00402 		orr	r2, r2, #4
 2510 0104 2264     		str	r2, [r4, #64]
 2511 0106 C7E7     		b	.L296
 2512              	.LVL191:
 2513              	.L373:
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2514              		.loc 1 1248 0
 2515 0108 1022     		movs	r2, #16
 2516              	.LVL192:
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2517              		.loc 1 1245 0
 2518 010a 45F48065 		orr	r5, r5, #1024
 2519              	.LVL193:
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2520              		.loc 1 1248 0
 2521 010e 1A61     		str	r2, [r3, #16]
 2522 0110 87E7     		b	.L280
 2523              	.LVL194:
 2524              	.L372:
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2525              		.loc 1 1236 0
 2526 0112 1022     		movs	r2, #16
 2527              	.LVL195:
 2528 0114 DA60     		str	r2, [r3, #12]
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2529              		.loc 1 1233 0
 2530 0116 4FF40075 		mov	r5, #512
 2531              	.LVL196:
 2532 011a 7CE7     		b	.L279
 2533              	.LVL197:
 2534              	.L377:
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2535              		.loc 1 1317 0 discriminator 2
 2536 011c 0204     		lsls	r2, r0, #16
 2537              	.LVL198:
 2538 011e B4D5     		bpl	.L295
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Error Passive Flag as read-only */ 
 2539              		.loc 1 1320 0
 2540 0120 226C     		ldr	r2, [r4, #64]
 2541 0122 42F00202 		orr	r2, r2, #2
 2542 0126 2264     		str	r2, [r4, #64]
ARM GAS  /tmp/ccwnAXFK.s 			page 82


 2543 0128 AFE7     		b	.L295
 2544              	.LVL199:
 2545              	.L376:
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2546              		.loc 1 1306 0 discriminator 2
 2547 012a 0604     		lsls	r6, r0, #16
 2548 012c A6D5     		bpl	.L294
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Error Warning Flag as read-only */
 2549              		.loc 1 1309 0
 2550 012e 226C     		ldr	r2, [r4, #64]
 2551 0130 42F00102 		orr	r2, r2, #1
 2552 0134 2264     		str	r2, [r4, #64]
 2553 0136 A1E7     		b	.L294
 2554              	.LVL200:
 2555              	.L282:
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp2 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK1);
 2556              		.loc 1 1260 0
 2557 0138 9A68     		ldr	r2, [r3, #8]
 2558              	.LVL201:
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp3 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK2);
 2559              		.loc 1 1261 0
 2560 013a 9968     		ldr	r1, [r3, #8]
 2561              	.LVL202:
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2562              		.loc 1 1264 0
 2563 013c 9607     		lsls	r6, r2, #30
 2564              	.LVL203:
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Transmit success */
 2565              		.loc 1 1262 0
 2566 013e 9868     		ldr	r0, [r3, #8]
 2567              	.LVL204:
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2568              		.loc 1 1264 0
 2569 0140 06D4     		bmi	.L283
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2570              		.loc 1 1264 0 is_stmt 0 discriminator 1
 2571 0142 8A05     		lsls	r2, r1, #22
 2572              	.LVL205:
 2573 0144 04D4     		bmi	.L283
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2574              		.loc 1 1264 0 discriminator 2
 2575 0146 C607     		lsls	r6, r0, #31
 2576 0148 02D4     		bmi	.L283
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2577              		.loc 1 1272 0 is_stmt 1
 2578 014a 45F40065 		orr	r5, r5, #2048
 2579              	.LVL206:
 2580 014e 17E0     		b	.L291
 2581              	.L283:
 2582              	.LVL207:
 2583              	.LBB4:
 2584              	.LBB5:
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 2585              		.loc 1 1519 0
 2586 0150 5A69     		ldr	r2, [r3, #20]
 2587 0152 22F00102 		bic	r2, r2, #1
 2588 0156 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/ccwnAXFK.s 			page 83


1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {   
 2589              		.loc 1 1521 0
 2590 0158 94F83C20 		ldrb	r2, [r4, #60]	@ zero_extendqisi2
 2591 015c 122A     		cmp	r2, #18
 2592 015e 20D0     		beq	.L381
 2593              	.L285:
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2594              		.loc 1 1537 0
 2595 0160 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 2596 0164 DBB2     		uxtb	r3, r3
 2597 0166 522B     		cmp	r3, #82
 2598 0168 20D0     		beq	.L287
 2599 016a 722B     		cmp	r3, #114
 2600 016c 26D0     		beq	.L288
 2601 016e 422B     		cmp	r3, #66
 2602 0170 20D0     		beq	.L382
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
 2603              		.loc 1 1549 0
 2604 0172 0123     		movs	r3, #1
 2605 0174 84F83C30 		strb	r3, [r4, #60]
 2606              	.L290:
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 2607              		.loc 1 1554 0
 2608 0178 2046     		mov	r0, r4
 2609              	.LVL208:
 2610 017a FFF7FEFF 		bl	HAL_CAN_TxCpltCallback
 2611              	.LVL209:
 2612 017e 2368     		ldr	r3, [r4]
 2613              	.LVL210:
 2614              	.L291:
 2615              	.LBE5:
 2616              	.LBE4:
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    CAN_FLAG_TXOK0 | CAN_FLAG_TXOK1 | CAN_FLAG_TXOK2);
 2617              		.loc 1 1276 0
 2618 0180 9968     		ldr	r1, [r3, #8]
 2619 0182 224A     		ldr	r2, .L383+12
 2620 0184 0A43     		orrs	r2, r2, r1
 2621 0186 9A60     		str	r2, [r3, #8]
 2622 0188 60E7     		b	.L281
 2623              	.LVL211:
 2624              	.L374:
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2625              		.loc 1 1287 0
 2626 018a 2046     		mov	r0, r4
 2627 018c 0021     		movs	r1, #0
 2628 018e FFF7FEFF 		bl	CAN_Receive_IT
 2629              	.LVL212:
 2630 0192 2368     		ldr	r3, [r4]
 2631 0194 61E7     		b	.L292
 2632              	.LVL213:
 2633              	.L375:
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2634              		.loc 1 1296 0
 2635 0196 2046     		mov	r0, r4
 2636 0198 0121     		movs	r1, #1
 2637              	.LVL214:
 2638 019a FFF7FEFF 		bl	CAN_Receive_IT
ARM GAS  /tmp/ccwnAXFK.s 			page 84


 2639              	.LVL215:
 2640 019e 2368     		ldr	r3, [r4]
 2641 01a0 62E7     		b	.L293
 2642              	.LVL216:
 2643              	.L381:
 2644              	.LBB7:
 2645              	.LBB6:
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
 2646              		.loc 1 1529 0
 2647 01a2 5A69     		ldr	r2, [r3, #20]
 2648 01a4 22F40F42 		bic	r2, r2, #36608
 2649 01a8 5A61     		str	r2, [r3, #20]
 2650 01aa D9E7     		b	.L285
 2651              	.L287:
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
 2652              		.loc 1 1543 0
 2653 01ac 3223     		movs	r3, #50
 2654 01ae 84F83C30 		strb	r3, [r4, #60]
 2655 01b2 E1E7     		b	.L290
 2656              	.L382:
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
 2657              		.loc 1 1540 0
 2658 01b4 2223     		movs	r3, #34
 2659 01b6 84F83C30 		strb	r3, [r4, #60]
 2660 01ba DDE7     		b	.L290
 2661              	.L288:
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
 2662              		.loc 1 1546 0
 2663 01bc 6223     		movs	r3, #98
 2664 01be 84F83C30 		strb	r3, [r4, #60]
 2665 01c2 D9E7     		b	.L290
 2666              	.LVL217:
 2667              	.L303:
 2668              	.LBE6:
 2669              	.LBE7:
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2670              		.loc 1 1362 0
 2671 01c4 226C     		ldr	r2, [r4, #64]
 2672              	.LVL218:
 2673 01c6 42F08002 		orr	r2, r2, #128
 2674 01ca 2264     		str	r2, [r4, #64]
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 2675              		.loc 1 1363 0
 2676 01cc 90E7     		b	.L298
 2677              	.LVL219:
 2678              	.L380:
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2679              		.loc 1 1342 0
 2680 01ce 102A     		cmp	r2, #16
 2681 01d0 10D0     		beq	.L301
 2682 01d2 202A     		cmp	r2, #32
 2683 01d4 8CD1     		bne	.L298
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2684              		.loc 1 1350 0
 2685 01d6 226C     		ldr	r2, [r4, #64]
 2686              	.LVL220:
 2687 01d8 42F01002 		orr	r2, r2, #16
ARM GAS  /tmp/ccwnAXFK.s 			page 85


 2688 01dc 2264     		str	r2, [r4, #64]
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 2689              		.loc 1 1351 0
 2690 01de 87E7     		b	.L298
 2691              	.LVL221:
 2692              	.L304:
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2693              		.loc 1 1366 0
 2694 01e0 226C     		ldr	r2, [r4, #64]
 2695              	.LVL222:
 2696 01e2 42F48072 		orr	r2, r2, #256
 2697 01e6 2264     		str	r2, [r4, #64]
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default:
 2698              		.loc 1 1367 0
 2699 01e8 82E7     		b	.L298
 2700              	.LVL223:
 2701              	.L299:
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2702              		.loc 1 1354 0
 2703 01ea 226C     		ldr	r2, [r4, #64]
 2704              	.LVL224:
 2705 01ec 42F02002 		orr	r2, r2, #32
 2706 01f0 2264     		str	r2, [r4, #64]
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2):
 2707              		.loc 1 1355 0
 2708 01f2 7DE7     		b	.L298
 2709              	.LVL225:
 2710              	.L301:
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2711              		.loc 1 1346 0
 2712 01f4 226C     		ldr	r2, [r4, #64]
 2713              	.LVL226:
 2714 01f6 42F00802 		orr	r2, r2, #8
 2715 01fa 2264     		str	r2, [r4, #64]
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_1):
 2716              		.loc 1 1347 0
 2717 01fc 78E7     		b	.L298
 2718              	.L384:
 2719 01fe 00BF     		.align	2
 2720              	.L383:
 2721 0200 01000004 		.word	67108865
 2722 0204 00010008 		.word	134217984
 2723 0208 00000110 		.word	268500992
 2724 020c 09050100 		.word	66825
 2725              		.cfi_endproc
 2726              	.LFE74:
 2728              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 2729              		.align	2
 2730              		.global	HAL_CAN_GetState
 2731              		.thumb
 2732              		.thumb_func
 2734              	HAL_CAN_GetState:
 2735              	.LFB78:
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return CAN state */
 2736              		.loc 1 1483 0
 2737              		.cfi_startproc
 2738              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccwnAXFK.s 			page 86


 2739              		@ frame_needed = 0, uses_anonymous_args = 0
 2740              		@ link register save eliminated.
 2741              	.LVL227:
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2742              		.loc 1 1485 0
 2743 0000 90F83C00 		ldrb	r0, [r0, #60]	@ zero_extendqisi2
 2744              	.LVL228:
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2745              		.loc 1 1486 0
 2746 0004 7047     		bx	lr
 2747              		.cfi_endproc
 2748              	.LFE78:
 2750 0006 00BF     		.section	.text.HAL_CAN_GetError,"ax",%progbits
 2751              		.align	2
 2752              		.global	HAL_CAN_GetError
 2753              		.thumb
 2754              		.thumb_func
 2756              	HAL_CAN_GetError:
 2757              	.LFB79:
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return hcan->ErrorCode;
 2758              		.loc 1 1495 0
 2759              		.cfi_startproc
 2760              		@ args = 0, pretend = 0, frame = 0
 2761              		@ frame_needed = 0, uses_anonymous_args = 0
 2762              		@ link register save eliminated.
 2763              	.LVL229:
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2764              		.loc 1 1496 0
 2765 0000 006C     		ldr	r0, [r0, #64]
 2766              	.LVL230:
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2767              		.loc 1 1497 0
 2768 0002 7047     		bx	lr
 2769              		.cfi_endproc
 2770              	.LFE79:
 2772              		.text
 2773              	.Letext0:
 2774              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2775              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2776              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 2777              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2778              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2779              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 2780              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can_ex.h"
 2781              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 2782              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccwnAXFK.s 			page 87


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_can.c
     /tmp/ccwnAXFK.s:19     .text.HAL_CAN_ConfigFilter:0000000000000000 $t
     /tmp/ccwnAXFK.s:24     .text.HAL_CAN_ConfigFilter:0000000000000000 HAL_CAN_ConfigFilter
     /tmp/ccwnAXFK.s:171    .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/ccwnAXFK.s:176    .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/ccwnAXFK.s:189    .text.HAL_CAN_Init:0000000000000000 $t
     /tmp/ccwnAXFK.s:194    .text.HAL_CAN_Init:0000000000000000 HAL_CAN_Init
     /tmp/ccwnAXFK.s:446    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/ccwnAXFK.s:451    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/ccwnAXFK.s:464    .text.HAL_CAN_DeInit:0000000000000000 $t
     /tmp/ccwnAXFK.s:469    .text.HAL_CAN_DeInit:0000000000000000 HAL_CAN_DeInit
     /tmp/ccwnAXFK.s:512    .text.HAL_CAN_Transmit:0000000000000000 $t
     /tmp/ccwnAXFK.s:517    .text.HAL_CAN_Transmit:0000000000000000 HAL_CAN_Transmit
     /tmp/ccwnAXFK.s:869    .text.HAL_CAN_Transmit:0000000000000210 $d
     /tmp/ccwnAXFK.s:876    .text.HAL_CAN_Transmit_IT:0000000000000000 $t
     /tmp/ccwnAXFK.s:881    .text.HAL_CAN_Transmit_IT:0000000000000000 HAL_CAN_Transmit_IT
     /tmp/ccwnAXFK.s:1099   .text.HAL_CAN_Receive:0000000000000000 $t
     /tmp/ccwnAXFK.s:1104   .text.HAL_CAN_Receive:0000000000000000 HAL_CAN_Receive
     /tmp/ccwnAXFK.s:1475   .text.HAL_CAN_Receive_IT:0000000000000000 $t
     /tmp/ccwnAXFK.s:1480   .text.HAL_CAN_Receive_IT:0000000000000000 HAL_CAN_Receive_IT
     /tmp/ccwnAXFK.s:1705   .text.HAL_CAN_Sleep:0000000000000000 $t
     /tmp/ccwnAXFK.s:1710   .text.HAL_CAN_Sleep:0000000000000000 HAL_CAN_Sleep
     /tmp/ccwnAXFK.s:1820   .text.HAL_CAN_WakeUp:0000000000000000 $t
     /tmp/ccwnAXFK.s:1825   .text.HAL_CAN_WakeUp:0000000000000000 HAL_CAN_WakeUp
     /tmp/ccwnAXFK.s:1921   .text.HAL_CAN_TxCpltCallback:0000000000000000 $t
     /tmp/ccwnAXFK.s:1926   .text.HAL_CAN_TxCpltCallback:0000000000000000 HAL_CAN_TxCpltCallback
     /tmp/ccwnAXFK.s:1939   .text.HAL_CAN_RxCpltCallback:0000000000000000 $t
     /tmp/ccwnAXFK.s:1944   .text.HAL_CAN_RxCpltCallback:0000000000000000 HAL_CAN_RxCpltCallback
     /tmp/ccwnAXFK.s:1957   .text.CAN_Receive_IT:0000000000000000 $t
     /tmp/ccwnAXFK.s:1961   .text.CAN_Receive_IT:0000000000000000 CAN_Receive_IT
     /tmp/ccwnAXFK.s:2222   .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/ccwnAXFK.s:2227   .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/ccwnAXFK.s:2240   .text.HAL_CAN_IRQHandler:0000000000000000 $t
     /tmp/ccwnAXFK.s:2245   .text.HAL_CAN_IRQHandler:0000000000000000 HAL_CAN_IRQHandler
     /tmp/ccwnAXFK.s:2721   .text.HAL_CAN_IRQHandler:0000000000000200 $d
     /tmp/ccwnAXFK.s:2729   .text.HAL_CAN_GetState:0000000000000000 $t
     /tmp/ccwnAXFK.s:2734   .text.HAL_CAN_GetState:0000000000000000 HAL_CAN_GetState
     /tmp/ccwnAXFK.s:2751   .text.HAL_CAN_GetError:0000000000000000 $t
     /tmp/ccwnAXFK.s:2756   .text.HAL_CAN_GetError:0000000000000000 HAL_CAN_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
